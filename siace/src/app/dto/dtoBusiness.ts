//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export class ActividadEstadisticaAgrupadaDto implements IActividadEstadisticaAgrupadaDto {
    pilId?: number;
    valoresPorNivel?: number[] | null;
    readonly empId?: number;

    constructor(data?: IActividadEstadisticaAgrupadaDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pilId = _data["pilId"] !== undefined ? _data["pilId"] : <any>null;
            if (Array.isArray(_data["valoresPorNivel"])) {
                this.valoresPorNivel = [] as any;
                for (let item of _data["valoresPorNivel"])
                    this.valoresPorNivel!.push(item);
            }
            else {
                this.valoresPorNivel = <any>null;
            }
            (<any>this).empId = _data["empId"] !== undefined ? _data["empId"] : <any>null;
        }
    }

    static fromJS(data: any): ActividadEstadisticaAgrupadaDto {
        data = typeof data === 'object' ? data : {};
        let result = new ActividadEstadisticaAgrupadaDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pilId"] = this.pilId !== undefined ? this.pilId : <any>null;
        if (Array.isArray(this.valoresPorNivel)) {
            data["valoresPorNivel"] = [];
            for (let item of this.valoresPorNivel)
                data["valoresPorNivel"].push(item);
        }
        data["empId"] = this.empId !== undefined ? this.empId : <any>null;
        return data;
    }
}

export interface IActividadEstadisticaAgrupadaDto {
    pilId?: number;
    valoresPorNivel?: number[] | null;
    empId?: number;
}

export class ActividadEvidenciaDto implements IActividadEvidenciaDto {
    pilarId?: number;
    nombreActividad?: string | null;
    evidencias?: EvidenciaDto[] | null;

    constructor(data?: IActividadEvidenciaDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pilarId = _data["pilarId"] !== undefined ? _data["pilarId"] : <any>null;
            this.nombreActividad = _data["nombreActividad"] !== undefined ? _data["nombreActividad"] : <any>null;
            if (Array.isArray(_data["evidencias"])) {
                this.evidencias = [] as any;
                for (let item of _data["evidencias"])
                    this.evidencias!.push(EvidenciaDto.fromJS(item));
            }
            else {
                this.evidencias = <any>null;
            }
        }
    }

    static fromJS(data: any): ActividadEvidenciaDto {
        data = typeof data === 'object' ? data : {};
        let result = new ActividadEvidenciaDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pilarId"] = this.pilarId !== undefined ? this.pilarId : <any>null;
        data["nombreActividad"] = this.nombreActividad !== undefined ? this.nombreActividad : <any>null;
        if (Array.isArray(this.evidencias)) {
            data["evidencias"] = [];
            for (let item of this.evidencias)
                data["evidencias"].push(item.toJSON());
        }
        return data;
    }
}

export interface IActividadEvidenciaDto {
    pilarId?: number;
    nombreActividad?: string | null;
    evidencias?: EvidenciaDto[] | null;
}

export class ActividadesA3 implements IActividadesA3 {
    aaaId?: number;
    aaaPilId?: number;
    aaaNivId?: number | null;
    aaaDescripcion?: string | null;
    aaaDuracion?: number | null;
    aaaPredecesora?: number | null;
    aaaVeaId?: number | null;
    aaaNiv?: Nivele;
    aaaPil?: Pilare;
    aaaPredecesoraNavigation?: ActividadesA3;
    aaaVea?: VersionesA3;
    evidencia?: Evidencia[] | null;
    inverseAaaPredecesoraNavigation?: ActividadesA3[] | null;

    constructor(data?: IActividadesA3) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.aaaId = _data["aaaId"] !== undefined ? _data["aaaId"] : <any>null;
            this.aaaPilId = _data["aaaPilId"] !== undefined ? _data["aaaPilId"] : <any>null;
            this.aaaNivId = _data["aaaNivId"] !== undefined ? _data["aaaNivId"] : <any>null;
            this.aaaDescripcion = _data["aaaDescripcion"] !== undefined ? _data["aaaDescripcion"] : <any>null;
            this.aaaDuracion = _data["aaaDuracion"] !== undefined ? _data["aaaDuracion"] : <any>null;
            this.aaaPredecesora = _data["aaaPredecesora"] !== undefined ? _data["aaaPredecesora"] : <any>null;
            this.aaaVeaId = _data["aaaVeaId"] !== undefined ? _data["aaaVeaId"] : <any>null;
            this.aaaNiv = _data["aaaNiv"] ? Nivele.fromJS(_data["aaaNiv"]) : <any>null;
            this.aaaPil = _data["aaaPil"] ? Pilare.fromJS(_data["aaaPil"]) : <any>null;
            this.aaaPredecesoraNavigation = _data["aaaPredecesoraNavigation"] ? ActividadesA3.fromJS(_data["aaaPredecesoraNavigation"]) : <any>null;
            this.aaaVea = _data["aaaVea"] ? VersionesA3.fromJS(_data["aaaVea"]) : <any>null;
            if (Array.isArray(_data["evidencia"])) {
                this.evidencia = [] as any;
                for (let item of _data["evidencia"])
                    this.evidencia!.push(Evidencia.fromJS(item));
            }
            else {
                this.evidencia = <any>null;
            }
            if (Array.isArray(_data["inverseAaaPredecesoraNavigation"])) {
                this.inverseAaaPredecesoraNavigation = [] as any;
                for (let item of _data["inverseAaaPredecesoraNavigation"])
                    this.inverseAaaPredecesoraNavigation!.push(ActividadesA3.fromJS(item));
            }
            else {
                this.inverseAaaPredecesoraNavigation = <any>null;
            }
        }
    }

    static fromJS(data: any): ActividadesA3 {
        data = typeof data === 'object' ? data : {};
        let result = new ActividadesA3();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["aaaId"] = this.aaaId !== undefined ? this.aaaId : <any>null;
        data["aaaPilId"] = this.aaaPilId !== undefined ? this.aaaPilId : <any>null;
        data["aaaNivId"] = this.aaaNivId !== undefined ? this.aaaNivId : <any>null;
        data["aaaDescripcion"] = this.aaaDescripcion !== undefined ? this.aaaDescripcion : <any>null;
        data["aaaDuracion"] = this.aaaDuracion !== undefined ? this.aaaDuracion : <any>null;
        data["aaaPredecesora"] = this.aaaPredecesora !== undefined ? this.aaaPredecesora : <any>null;
        data["aaaVeaId"] = this.aaaVeaId !== undefined ? this.aaaVeaId : <any>null;
        data["aaaNiv"] = this.aaaNiv ? this.aaaNiv.toJSON() : <any>null;
        data["aaaPil"] = this.aaaPil ? this.aaaPil.toJSON() : <any>null;
        data["aaaPredecesoraNavigation"] = this.aaaPredecesoraNavigation ? this.aaaPredecesoraNavigation.toJSON() : <any>null;
        data["aaaVea"] = this.aaaVea ? this.aaaVea.toJSON() : <any>null;
        if (Array.isArray(this.evidencia)) {
            data["evidencia"] = [];
            for (let item of this.evidencia)
                data["evidencia"].push(item.toJSON());
        }
        if (Array.isArray(this.inverseAaaPredecesoraNavigation)) {
            data["inverseAaaPredecesoraNavigation"] = [];
            for (let item of this.inverseAaaPredecesoraNavigation)
                data["inverseAaaPredecesoraNavigation"].push(item.toJSON());
        }
        return data;
    }
}

export interface IActividadesA3 {
    aaaId?: number;
    aaaPilId?: number;
    aaaNivId?: number | null;
    aaaDescripcion?: string | null;
    aaaDuracion?: number | null;
    aaaPredecesora?: number | null;
    aaaVeaId?: number | null;
    aaaNiv?: Nivele;
    aaaPil?: Pilare;
    aaaPredecesoraNavigation?: ActividadesA3;
    aaaVea?: VersionesA3;
    evidencia?: Evidencia[] | null;
    inverseAaaPredecesoraNavigation?: ActividadesA3[] | null;
}

export class ActividadesA3Dto implements IActividadesA3Dto {
    aaaId?: number;
    aaaPilId?: number;
    aaaNivId?: number | null;
    aaaVeaId?: number;
    aaaDescripcion?: string | null;
    aaaDuracion?: number | null;
    aaaPredecesora?: number | null;
    aaaEstatus?: boolean | null;
    evidencia?: EvidenciaNivDto[] | null;

    constructor(data?: IActividadesA3Dto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.aaaId = _data["aaaId"] !== undefined ? _data["aaaId"] : <any>null;
            this.aaaPilId = _data["aaaPilId"] !== undefined ? _data["aaaPilId"] : <any>null;
            this.aaaNivId = _data["aaaNivId"] !== undefined ? _data["aaaNivId"] : <any>null;
            this.aaaVeaId = _data["aaaVeaId"] !== undefined ? _data["aaaVeaId"] : <any>null;
            this.aaaDescripcion = _data["aaaDescripcion"] !== undefined ? _data["aaaDescripcion"] : <any>null;
            this.aaaDuracion = _data["aaaDuracion"] !== undefined ? _data["aaaDuracion"] : <any>null;
            this.aaaPredecesora = _data["aaaPredecesora"] !== undefined ? _data["aaaPredecesora"] : <any>null;
            this.aaaEstatus = _data["aaaEstatus"] !== undefined ? _data["aaaEstatus"] : <any>null;
            if (Array.isArray(_data["evidencia"])) {
                this.evidencia = [] as any;
                for (let item of _data["evidencia"])
                    this.evidencia!.push(EvidenciaNivDto.fromJS(item));
            }
            else {
                this.evidencia = <any>null;
            }
        }
    }

    static fromJS(data: any): ActividadesA3Dto {
        data = typeof data === 'object' ? data : {};
        let result = new ActividadesA3Dto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["aaaId"] = this.aaaId !== undefined ? this.aaaId : <any>null;
        data["aaaPilId"] = this.aaaPilId !== undefined ? this.aaaPilId : <any>null;
        data["aaaNivId"] = this.aaaNivId !== undefined ? this.aaaNivId : <any>null;
        data["aaaVeaId"] = this.aaaVeaId !== undefined ? this.aaaVeaId : <any>null;
        data["aaaDescripcion"] = this.aaaDescripcion !== undefined ? this.aaaDescripcion : <any>null;
        data["aaaDuracion"] = this.aaaDuracion !== undefined ? this.aaaDuracion : <any>null;
        data["aaaPredecesora"] = this.aaaPredecesora !== undefined ? this.aaaPredecesora : <any>null;
        data["aaaEstatus"] = this.aaaEstatus !== undefined ? this.aaaEstatus : <any>null;
        if (Array.isArray(this.evidencia)) {
            data["evidencia"] = [];
            for (let item of this.evidencia)
                data["evidencia"].push(item.toJSON());
        }
        return data;
    }
}

export interface IActividadesA3Dto {
    aaaId?: number;
    aaaPilId?: number;
    aaaNivId?: number | null;
    aaaVeaId?: number;
    aaaDescripcion?: string | null;
    aaaDuracion?: number | null;
    aaaPredecesora?: number | null;
    aaaEstatus?: boolean | null;
    evidencia?: EvidenciaNivDto[] | null;
}

export class CargasEncuesta implements ICargasEncuesta {
    caeId?: number;
    caeArchivo?: string | null;
    caeUsrId?: number;
    caeFecha?: Date;
    caeEstatus?: string | null;
    caeResultado?: string | null;
    caeNumeroPreguntas?: number;
    caeEncActivo?: boolean | null;
    caeUsr?: Usuario;

    constructor(data?: ICargasEncuesta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.caeId = _data["caeId"] !== undefined ? _data["caeId"] : <any>null;
            this.caeArchivo = _data["caeArchivo"] !== undefined ? _data["caeArchivo"] : <any>null;
            this.caeUsrId = _data["caeUsrId"] !== undefined ? _data["caeUsrId"] : <any>null;
            this.caeFecha = _data["caeFecha"] ? new Date(_data["caeFecha"].toString()) : <any>null;
            this.caeEstatus = _data["caeEstatus"] !== undefined ? _data["caeEstatus"] : <any>null;
            this.caeResultado = _data["caeResultado"] !== undefined ? _data["caeResultado"] : <any>null;
            this.caeNumeroPreguntas = _data["caeNumeroPreguntas"] !== undefined ? _data["caeNumeroPreguntas"] : <any>null;
            this.caeEncActivo = _data["caeEncActivo"] !== undefined ? _data["caeEncActivo"] : <any>null;
            this.caeUsr = _data["caeUsr"] ? Usuario.fromJS(_data["caeUsr"]) : <any>null;
        }
    }

    static fromJS(data: any): CargasEncuesta {
        data = typeof data === 'object' ? data : {};
        let result = new CargasEncuesta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["caeId"] = this.caeId !== undefined ? this.caeId : <any>null;
        data["caeArchivo"] = this.caeArchivo !== undefined ? this.caeArchivo : <any>null;
        data["caeUsrId"] = this.caeUsrId !== undefined ? this.caeUsrId : <any>null;
        data["caeFecha"] = this.caeFecha ? this.caeFecha.toISOString() : <any>null;
        data["caeEstatus"] = this.caeEstatus !== undefined ? this.caeEstatus : <any>null;
        data["caeResultado"] = this.caeResultado !== undefined ? this.caeResultado : <any>null;
        data["caeNumeroPreguntas"] = this.caeNumeroPreguntas !== undefined ? this.caeNumeroPreguntas : <any>null;
        data["caeEncActivo"] = this.caeEncActivo !== undefined ? this.caeEncActivo : <any>null;
        data["caeUsr"] = this.caeUsr ? this.caeUsr.toJSON() : <any>null;
        return data;
    }
}

export interface ICargasEncuesta {
    caeId?: number;
    caeArchivo?: string | null;
    caeUsrId?: number;
    caeFecha?: Date;
    caeEstatus?: string | null;
    caeResultado?: string | null;
    caeNumeroPreguntas?: number;
    caeEncActivo?: boolean | null;
    caeUsr?: Usuario;
}

export class ContestacionRequestCreateDto implements IContestacionRequestCreateDto {
    conNombre!: string;
    empId!: number;
    conFecha?: Date | null;

    constructor(data?: IContestacionRequestCreateDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.conNombre = _data["conNombre"] !== undefined ? _data["conNombre"] : <any>null;
            this.empId = _data["empId"] !== undefined ? _data["empId"] : <any>null;
            this.conFecha = _data["conFecha"] ? new Date(_data["conFecha"].toString()) : <any>null;
        }
    }

    static fromJS(data: any): ContestacionRequestCreateDto {
        data = typeof data === 'object' ? data : {};
        let result = new ContestacionRequestCreateDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["conNombre"] = this.conNombre !== undefined ? this.conNombre : <any>null;
        data["empId"] = this.empId !== undefined ? this.empId : <any>null;
        data["conFecha"] = this.conFecha ? this.conFecha.toISOString() : <any>null;
        return data;
    }
}

export interface IContestacionRequestCreateDto {
    conNombre: string;
    empId: number;
    conFecha?: Date | null;
}

export class ContestacionRespuestaDto implements IContestacionRespuestaDto {
    corId?: number;
    corResId?: number;
    corPreId?: number;
    corValor?: string | null;
    corImagen?: string | null;
    corNoContesto?: boolean;
    corConId?: number;

    constructor(data?: IContestacionRespuestaDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.corId = _data["corId"] !== undefined ? _data["corId"] : <any>null;
            this.corResId = _data["corResId"] !== undefined ? _data["corResId"] : <any>null;
            this.corPreId = _data["corPreId"] !== undefined ? _data["corPreId"] : <any>null;
            this.corValor = _data["corValor"] !== undefined ? _data["corValor"] : <any>null;
            this.corImagen = _data["corImagen"] !== undefined ? _data["corImagen"] : <any>null;
            this.corNoContesto = _data["corNoContesto"] !== undefined ? _data["corNoContesto"] : <any>null;
            this.corConId = _data["corConId"] !== undefined ? _data["corConId"] : <any>null;
        }
    }

    static fromJS(data: any): ContestacionRespuestaDto {
        data = typeof data === 'object' ? data : {};
        let result = new ContestacionRespuestaDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["corId"] = this.corId !== undefined ? this.corId : <any>null;
        data["corResId"] = this.corResId !== undefined ? this.corResId : <any>null;
        data["corPreId"] = this.corPreId !== undefined ? this.corPreId : <any>null;
        data["corValor"] = this.corValor !== undefined ? this.corValor : <any>null;
        data["corImagen"] = this.corImagen !== undefined ? this.corImagen : <any>null;
        data["corNoContesto"] = this.corNoContesto !== undefined ? this.corNoContesto : <any>null;
        data["corConId"] = this.corConId !== undefined ? this.corConId : <any>null;
        return data;
    }
}

export interface IContestacionRespuestaDto {
    corId?: number;
    corResId?: number;
    corPreId?: number;
    corValor?: string | null;
    corImagen?: string | null;
    corNoContesto?: boolean;
    corConId?: number;
}

export class Contestacione implements IContestacione {
    conId?: number;
    conEncId?: number;
    conFecha?: Date;
    conFechaFin?: Date | null;
    conPromedio?: number | null;
    conEmpId?: number | null;
    conEmp?: Emprendedore;
    conEnc?: Encuesta;
    contestacionesRespuesta?: ContestacionesRespuesta[] | null;

    constructor(data?: IContestacione) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.conId = _data["conId"] !== undefined ? _data["conId"] : <any>null;
            this.conEncId = _data["conEncId"] !== undefined ? _data["conEncId"] : <any>null;
            this.conFecha = _data["conFecha"] ? new Date(_data["conFecha"].toString()) : <any>null;
            this.conFechaFin = _data["conFechaFin"] ? new Date(_data["conFechaFin"].toString()) : <any>null;
            this.conPromedio = _data["conPromedio"] !== undefined ? _data["conPromedio"] : <any>null;
            this.conEmpId = _data["conEmpId"] !== undefined ? _data["conEmpId"] : <any>null;
            this.conEmp = _data["conEmp"] ? Emprendedore.fromJS(_data["conEmp"]) : <any>null;
            this.conEnc = _data["conEnc"] ? Encuesta.fromJS(_data["conEnc"]) : <any>null;
            if (Array.isArray(_data["contestacionesRespuesta"])) {
                this.contestacionesRespuesta = [] as any;
                for (let item of _data["contestacionesRespuesta"])
                    this.contestacionesRespuesta!.push(ContestacionesRespuesta.fromJS(item));
            }
            else {
                this.contestacionesRespuesta = <any>null;
            }
        }
    }

    static fromJS(data: any): Contestacione {
        data = typeof data === 'object' ? data : {};
        let result = new Contestacione();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["conId"] = this.conId !== undefined ? this.conId : <any>null;
        data["conEncId"] = this.conEncId !== undefined ? this.conEncId : <any>null;
        data["conFecha"] = this.conFecha ? this.conFecha.toISOString() : <any>null;
        data["conFechaFin"] = this.conFechaFin ? this.conFechaFin.toISOString() : <any>null;
        data["conPromedio"] = this.conPromedio !== undefined ? this.conPromedio : <any>null;
        data["conEmpId"] = this.conEmpId !== undefined ? this.conEmpId : <any>null;
        data["conEmp"] = this.conEmp ? this.conEmp.toJSON() : <any>null;
        data["conEnc"] = this.conEnc ? this.conEnc.toJSON() : <any>null;
        if (Array.isArray(this.contestacionesRespuesta)) {
            data["contestacionesRespuesta"] = [];
            for (let item of this.contestacionesRespuesta)
                data["contestacionesRespuesta"].push(item.toJSON());
        }
        return data;
    }
}

export interface IContestacione {
    conId?: number;
    conEncId?: number;
    conFecha?: Date;
    conFechaFin?: Date | null;
    conPromedio?: number | null;
    conEmpId?: number | null;
    conEmp?: Emprendedore;
    conEnc?: Encuesta;
    contestacionesRespuesta?: ContestacionesRespuesta[] | null;
}

export class ContestacionesRespuesta implements IContestacionesRespuesta {
    corId?: number;
    corConId?: number;
    corResId?: number | null;
    corPreId?: number;
    corValor?: string | null;
    corImagen?: string | null;
    corNoContesto?: boolean | null;
    corCon?: Contestacione;
    corPre?: Pregunta;
    corRes?: Respuesta;

    constructor(data?: IContestacionesRespuesta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.corId = _data["corId"] !== undefined ? _data["corId"] : <any>null;
            this.corConId = _data["corConId"] !== undefined ? _data["corConId"] : <any>null;
            this.corResId = _data["corResId"] !== undefined ? _data["corResId"] : <any>null;
            this.corPreId = _data["corPreId"] !== undefined ? _data["corPreId"] : <any>null;
            this.corValor = _data["corValor"] !== undefined ? _data["corValor"] : <any>null;
            this.corImagen = _data["corImagen"] !== undefined ? _data["corImagen"] : <any>null;
            this.corNoContesto = _data["corNoContesto"] !== undefined ? _data["corNoContesto"] : <any>null;
            this.corCon = _data["corCon"] ? Contestacione.fromJS(_data["corCon"]) : <any>null;
            this.corPre = _data["corPre"] ? Pregunta.fromJS(_data["corPre"]) : <any>null;
            this.corRes = _data["corRes"] ? Respuesta.fromJS(_data["corRes"]) : <any>null;
        }
    }

    static fromJS(data: any): ContestacionesRespuesta {
        data = typeof data === 'object' ? data : {};
        let result = new ContestacionesRespuesta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["corId"] = this.corId !== undefined ? this.corId : <any>null;
        data["corConId"] = this.corConId !== undefined ? this.corConId : <any>null;
        data["corResId"] = this.corResId !== undefined ? this.corResId : <any>null;
        data["corPreId"] = this.corPreId !== undefined ? this.corPreId : <any>null;
        data["corValor"] = this.corValor !== undefined ? this.corValor : <any>null;
        data["corImagen"] = this.corImagen !== undefined ? this.corImagen : <any>null;
        data["corNoContesto"] = this.corNoContesto !== undefined ? this.corNoContesto : <any>null;
        data["corCon"] = this.corCon ? this.corCon.toJSON() : <any>null;
        data["corPre"] = this.corPre ? this.corPre.toJSON() : <any>null;
        data["corRes"] = this.corRes ? this.corRes.toJSON() : <any>null;
        return data;
    }
}

export interface IContestacionesRespuesta {
    corId?: number;
    corConId?: number;
    corResId?: number | null;
    corPreId?: number;
    corValor?: string | null;
    corImagen?: string | null;
    corNoContesto?: boolean | null;
    corCon?: Contestacione;
    corPre?: Pregunta;
    corRes?: Respuesta;
}

export class DiagnosticoPromedio implements IDiagnosticoPromedio {
    conId?: number;
    conPromedio?: number | null;

    constructor(data?: IDiagnosticoPromedio) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.conId = _data["conId"] !== undefined ? _data["conId"] : <any>null;
            this.conPromedio = _data["conPromedio"] !== undefined ? _data["conPromedio"] : <any>null;
        }
    }

    static fromJS(data: any): DiagnosticoPromedio {
        data = typeof data === 'object' ? data : {};
        let result = new DiagnosticoPromedio();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["conId"] = this.conId !== undefined ? this.conId : <any>null;
        data["conPromedio"] = this.conPromedio !== undefined ? this.conPromedio : <any>null;
        return data;
    }
}

export interface IDiagnosticoPromedio {
    conId?: number;
    conPromedio?: number | null;
}

export class EmprendedorEtapaDto implements IEmprendedorEtapaDto {
    emeUsrId!: number;
    emeEmpId!: number;
    emeEtaId!: number;

    constructor(data?: IEmprendedorEtapaDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.emeUsrId = _data["emeUsrId"] !== undefined ? _data["emeUsrId"] : <any>null;
            this.emeEmpId = _data["emeEmpId"] !== undefined ? _data["emeEmpId"] : <any>null;
            this.emeEtaId = _data["emeEtaId"] !== undefined ? _data["emeEtaId"] : <any>null;
        }
    }

    static fromJS(data: any): EmprendedorEtapaDto {
        data = typeof data === 'object' ? data : {};
        let result = new EmprendedorEtapaDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["emeUsrId"] = this.emeUsrId !== undefined ? this.emeUsrId : <any>null;
        data["emeEmpId"] = this.emeEmpId !== undefined ? this.emeEmpId : <any>null;
        data["emeEtaId"] = this.emeEtaId !== undefined ? this.emeEtaId : <any>null;
        return data;
    }
}

export interface IEmprendedorEtapaDto {
    emeUsrId: number;
    emeEmpId: number;
    emeEtaId: number;
}

export class EmprendedorEtapaUpdate implements IEmprendedorEtapaUpdate {
    emeId?: number;
    nuevoEtaId?: number;

    constructor(data?: IEmprendedorEtapaUpdate) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.emeId = _data["emeId"] !== undefined ? _data["emeId"] : <any>null;
            this.nuevoEtaId = _data["nuevoEtaId"] !== undefined ? _data["nuevoEtaId"] : <any>null;
        }
    }

    static fromJS(data: any): EmprendedorEtapaUpdate {
        data = typeof data === 'object' ? data : {};
        let result = new EmprendedorEtapaUpdate();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["emeId"] = this.emeId !== undefined ? this.emeId : <any>null;
        data["nuevoEtaId"] = this.nuevoEtaId !== undefined ? this.nuevoEtaId : <any>null;
        return data;
    }
}

export interface IEmprendedorEtapaUpdate {
    emeId?: number;
    nuevoEtaId?: number;
}

export class Emprendedore implements IEmprendedore {
    empId?: number;
    empRazonSocial?: string | null;
    empDomicilio?: string | null;
    empCorreo?: string | null;
    empTelefono?: string | null;
    empClave?: string | null;
    empNombreCompleto?: string | null;
    empRfc?: string | null;
    empEdad?: number | null;
    empNie?: number | null;
    empNombreEmpresa?: string | null;
    empNombreTemporal?: string | null;
    empGiro?: number | null;
    empNec?: number | null;
    contestacione?: Contestacione;
    empGiroNavigation?: Giro;
    empNecNavigation?: Necesidade;
    empNieNavigation?: NivelesEstudio;
    emprendedoresEtapas?: EmprendedoresEtapa[] | null;
    respuestasA3s?: RespuestasA3[] | null;
    roles?: Role[] | null;
    sesiones?: Sesione[] | null;
    usuarios?: Usuario[] | null;

    constructor(data?: IEmprendedore) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.empId = _data["empId"] !== undefined ? _data["empId"] : <any>null;
            this.empRazonSocial = _data["empRazonSocial"] !== undefined ? _data["empRazonSocial"] : <any>null;
            this.empDomicilio = _data["empDomicilio"] !== undefined ? _data["empDomicilio"] : <any>null;
            this.empCorreo = _data["empCorreo"] !== undefined ? _data["empCorreo"] : <any>null;
            this.empTelefono = _data["empTelefono"] !== undefined ? _data["empTelefono"] : <any>null;
            this.empClave = _data["empClave"] !== undefined ? _data["empClave"] : <any>null;
            this.empNombreCompleto = _data["empNombreCompleto"] !== undefined ? _data["empNombreCompleto"] : <any>null;
            this.empRfc = _data["empRfc"] !== undefined ? _data["empRfc"] : <any>null;
            this.empEdad = _data["empEdad"] !== undefined ? _data["empEdad"] : <any>null;
            this.empNie = _data["empNie"] !== undefined ? _data["empNie"] : <any>null;
            this.empNombreEmpresa = _data["empNombreEmpresa"] !== undefined ? _data["empNombreEmpresa"] : <any>null;
            this.empNombreTemporal = _data["empNombreTemporal"] !== undefined ? _data["empNombreTemporal"] : <any>null;
            this.empGiro = _data["empGiro"] !== undefined ? _data["empGiro"] : <any>null;
            this.empNec = _data["empNec"] !== undefined ? _data["empNec"] : <any>null;
            this.contestacione = _data["contestacione"] ? Contestacione.fromJS(_data["contestacione"]) : <any>null;
            this.empGiroNavigation = _data["empGiroNavigation"] ? Giro.fromJS(_data["empGiroNavigation"]) : <any>null;
            this.empNecNavigation = _data["empNecNavigation"] ? Necesidade.fromJS(_data["empNecNavigation"]) : <any>null;
            this.empNieNavigation = _data["empNieNavigation"] ? NivelesEstudio.fromJS(_data["empNieNavigation"]) : <any>null;
            if (Array.isArray(_data["emprendedoresEtapas"])) {
                this.emprendedoresEtapas = [] as any;
                for (let item of _data["emprendedoresEtapas"])
                    this.emprendedoresEtapas!.push(EmprendedoresEtapa.fromJS(item));
            }
            else {
                this.emprendedoresEtapas = <any>null;
            }
            if (Array.isArray(_data["respuestasA3s"])) {
                this.respuestasA3s = [] as any;
                for (let item of _data["respuestasA3s"])
                    this.respuestasA3s!.push(RespuestasA3.fromJS(item));
            }
            else {
                this.respuestasA3s = <any>null;
            }
            if (Array.isArray(_data["roles"])) {
                this.roles = [] as any;
                for (let item of _data["roles"])
                    this.roles!.push(Role.fromJS(item));
            }
            else {
                this.roles = <any>null;
            }
            if (Array.isArray(_data["sesiones"])) {
                this.sesiones = [] as any;
                for (let item of _data["sesiones"])
                    this.sesiones!.push(Sesione.fromJS(item));
            }
            else {
                this.sesiones = <any>null;
            }
            if (Array.isArray(_data["usuarios"])) {
                this.usuarios = [] as any;
                for (let item of _data["usuarios"])
                    this.usuarios!.push(Usuario.fromJS(item));
            }
            else {
                this.usuarios = <any>null;
            }
        }
    }

    static fromJS(data: any): Emprendedore {
        data = typeof data === 'object' ? data : {};
        let result = new Emprendedore();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["empId"] = this.empId !== undefined ? this.empId : <any>null;
        data["empRazonSocial"] = this.empRazonSocial !== undefined ? this.empRazonSocial : <any>null;
        data["empDomicilio"] = this.empDomicilio !== undefined ? this.empDomicilio : <any>null;
        data["empCorreo"] = this.empCorreo !== undefined ? this.empCorreo : <any>null;
        data["empTelefono"] = this.empTelefono !== undefined ? this.empTelefono : <any>null;
        data["empClave"] = this.empClave !== undefined ? this.empClave : <any>null;
        data["empNombreCompleto"] = this.empNombreCompleto !== undefined ? this.empNombreCompleto : <any>null;
        data["empRfc"] = this.empRfc !== undefined ? this.empRfc : <any>null;
        data["empEdad"] = this.empEdad !== undefined ? this.empEdad : <any>null;
        data["empNie"] = this.empNie !== undefined ? this.empNie : <any>null;
        data["empNombreEmpresa"] = this.empNombreEmpresa !== undefined ? this.empNombreEmpresa : <any>null;
        data["empNombreTemporal"] = this.empNombreTemporal !== undefined ? this.empNombreTemporal : <any>null;
        data["empGiro"] = this.empGiro !== undefined ? this.empGiro : <any>null;
        data["empNec"] = this.empNec !== undefined ? this.empNec : <any>null;
        data["contestacione"] = this.contestacione ? this.contestacione.toJSON() : <any>null;
        data["empGiroNavigation"] = this.empGiroNavigation ? this.empGiroNavigation.toJSON() : <any>null;
        data["empNecNavigation"] = this.empNecNavigation ? this.empNecNavigation.toJSON() : <any>null;
        data["empNieNavigation"] = this.empNieNavigation ? this.empNieNavigation.toJSON() : <any>null;
        if (Array.isArray(this.emprendedoresEtapas)) {
            data["emprendedoresEtapas"] = [];
            for (let item of this.emprendedoresEtapas)
                data["emprendedoresEtapas"].push(item.toJSON());
        }
        if (Array.isArray(this.respuestasA3s)) {
            data["respuestasA3s"] = [];
            for (let item of this.respuestasA3s)
                data["respuestasA3s"].push(item.toJSON());
        }
        if (Array.isArray(this.roles)) {
            data["roles"] = [];
            for (let item of this.roles)
                data["roles"].push(item.toJSON());
        }
        if (Array.isArray(this.sesiones)) {
            data["sesiones"] = [];
            for (let item of this.sesiones)
                data["sesiones"].push(item.toJSON());
        }
        if (Array.isArray(this.usuarios)) {
            data["usuarios"] = [];
            for (let item of this.usuarios)
                data["usuarios"].push(item.toJSON());
        }
        return data;
    }
}

export interface IEmprendedore {
    empId?: number;
    empRazonSocial?: string | null;
    empDomicilio?: string | null;
    empCorreo?: string | null;
    empTelefono?: string | null;
    empClave?: string | null;
    empNombreCompleto?: string | null;
    empRfc?: string | null;
    empEdad?: number | null;
    empNie?: number | null;
    empNombreEmpresa?: string | null;
    empNombreTemporal?: string | null;
    empGiro?: number | null;
    empNec?: number | null;
    contestacione?: Contestacione;
    empGiroNavigation?: Giro;
    empNecNavigation?: Necesidade;
    empNieNavigation?: NivelesEstudio;
    emprendedoresEtapas?: EmprendedoresEtapa[] | null;
    respuestasA3s?: RespuestasA3[] | null;
    roles?: Role[] | null;
    sesiones?: Sesione[] | null;
    usuarios?: Usuario[] | null;
}

export class EmprendedoresEtapa implements IEmprendedoresEtapa {
    emeId?: number;
    emeFecha?: Date;
    emeUsrId?: number;
    emeEmpId?: number;
    emeEtaId?: number;
    emeVeaId?: number;
    emeEmp?: Emprendedore;
    emeEta?: Etapa;
    emeUsr?: Usuario;
    emeVea?: VersionesA3;

    constructor(data?: IEmprendedoresEtapa) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.emeId = _data["emeId"] !== undefined ? _data["emeId"] : <any>null;
            this.emeFecha = _data["emeFecha"] ? new Date(_data["emeFecha"].toString()) : <any>null;
            this.emeUsrId = _data["emeUsrId"] !== undefined ? _data["emeUsrId"] : <any>null;
            this.emeEmpId = _data["emeEmpId"] !== undefined ? _data["emeEmpId"] : <any>null;
            this.emeEtaId = _data["emeEtaId"] !== undefined ? _data["emeEtaId"] : <any>null;
            this.emeVeaId = _data["emeVeaId"] !== undefined ? _data["emeVeaId"] : <any>null;
            this.emeEmp = _data["emeEmp"] ? Emprendedore.fromJS(_data["emeEmp"]) : <any>null;
            this.emeEta = _data["emeEta"] ? Etapa.fromJS(_data["emeEta"]) : <any>null;
            this.emeUsr = _data["emeUsr"] ? Usuario.fromJS(_data["emeUsr"]) : <any>null;
            this.emeVea = _data["emeVea"] ? VersionesA3.fromJS(_data["emeVea"]) : <any>null;
        }
    }

    static fromJS(data: any): EmprendedoresEtapa {
        data = typeof data === 'object' ? data : {};
        let result = new EmprendedoresEtapa();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["emeId"] = this.emeId !== undefined ? this.emeId : <any>null;
        data["emeFecha"] = this.emeFecha ? this.emeFecha.toISOString() : <any>null;
        data["emeUsrId"] = this.emeUsrId !== undefined ? this.emeUsrId : <any>null;
        data["emeEmpId"] = this.emeEmpId !== undefined ? this.emeEmpId : <any>null;
        data["emeEtaId"] = this.emeEtaId !== undefined ? this.emeEtaId : <any>null;
        data["emeVeaId"] = this.emeVeaId !== undefined ? this.emeVeaId : <any>null;
        data["emeEmp"] = this.emeEmp ? this.emeEmp.toJSON() : <any>null;
        data["emeEta"] = this.emeEta ? this.emeEta.toJSON() : <any>null;
        data["emeUsr"] = this.emeUsr ? this.emeUsr.toJSON() : <any>null;
        data["emeVea"] = this.emeVea ? this.emeVea.toJSON() : <any>null;
        return data;
    }
}

export interface IEmprendedoresEtapa {
    emeId?: number;
    emeFecha?: Date;
    emeUsrId?: number;
    emeEmpId?: number;
    emeEtaId?: number;
    emeVeaId?: number;
    emeEmp?: Emprendedore;
    emeEta?: Etapa;
    emeUsr?: Usuario;
    emeVea?: VersionesA3;
}

export class EmprendedoresSesionDto implements IEmprendedoresSesionDto {
    agendado?: number;
    pendiente?: number;

    constructor(data?: IEmprendedoresSesionDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.agendado = _data["agendado"] !== undefined ? _data["agendado"] : <any>null;
            this.pendiente = _data["pendiente"] !== undefined ? _data["pendiente"] : <any>null;
        }
    }

    static fromJS(data: any): EmprendedoresSesionDto {
        data = typeof data === 'object' ? data : {};
        let result = new EmprendedoresSesionDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["agendado"] = this.agendado !== undefined ? this.agendado : <any>null;
        data["pendiente"] = this.pendiente !== undefined ? this.pendiente : <any>null;
        return data;
    }
}

export interface IEmprendedoresSesionDto {
    agendado?: number;
    pendiente?: number;
}

export class Encuesta implements IEncuesta {
    encId?: number;
    encDescripcion?: string | null;
    encActivo?: boolean;
    encFechaRegistro?: Date;
    encUsrIdRegistro?: number;
    contestaciones?: Contestacione[] | null;
    pregunta?: Pregunta[] | null;

    constructor(data?: IEncuesta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.encId = _data["encId"] !== undefined ? _data["encId"] : <any>null;
            this.encDescripcion = _data["encDescripcion"] !== undefined ? _data["encDescripcion"] : <any>null;
            this.encActivo = _data["encActivo"] !== undefined ? _data["encActivo"] : <any>null;
            this.encFechaRegistro = _data["encFechaRegistro"] ? new Date(_data["encFechaRegistro"].toString()) : <any>null;
            this.encUsrIdRegistro = _data["encUsrIdRegistro"] !== undefined ? _data["encUsrIdRegistro"] : <any>null;
            if (Array.isArray(_data["contestaciones"])) {
                this.contestaciones = [] as any;
                for (let item of _data["contestaciones"])
                    this.contestaciones!.push(Contestacione.fromJS(item));
            }
            else {
                this.contestaciones = <any>null;
            }
            if (Array.isArray(_data["pregunta"])) {
                this.pregunta = [] as any;
                for (let item of _data["pregunta"])
                    this.pregunta!.push(Pregunta.fromJS(item));
            }
            else {
                this.pregunta = <any>null;
            }
        }
    }

    static fromJS(data: any): Encuesta {
        data = typeof data === 'object' ? data : {};
        let result = new Encuesta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["encId"] = this.encId !== undefined ? this.encId : <any>null;
        data["encDescripcion"] = this.encDescripcion !== undefined ? this.encDescripcion : <any>null;
        data["encActivo"] = this.encActivo !== undefined ? this.encActivo : <any>null;
        data["encFechaRegistro"] = this.encFechaRegistro ? this.encFechaRegistro.toISOString() : <any>null;
        data["encUsrIdRegistro"] = this.encUsrIdRegistro !== undefined ? this.encUsrIdRegistro : <any>null;
        if (Array.isArray(this.contestaciones)) {
            data["contestaciones"] = [];
            for (let item of this.contestaciones)
                data["contestaciones"].push(item.toJSON());
        }
        if (Array.isArray(this.pregunta)) {
            data["pregunta"] = [];
            for (let item of this.pregunta)
                data["pregunta"].push(item.toJSON());
        }
        return data;
    }
}

export interface IEncuesta {
    encId?: number;
    encDescripcion?: string | null;
    encActivo?: boolean;
    encFechaRegistro?: Date;
    encUsrIdRegistro?: number;
    contestaciones?: Contestacione[] | null;
    pregunta?: Pregunta[] | null;
}

export class ErrorResponse implements IErrorResponse {
    code?: number | null;
    source?: string | null;
    title?: string | null;
    detail?: string | null;

    constructor(data?: IErrorResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.code = _data["code"] !== undefined ? _data["code"] : <any>null;
            this.source = _data["source"] !== undefined ? _data["source"] : <any>null;
            this.title = _data["title"] !== undefined ? _data["title"] : <any>null;
            this.detail = _data["detail"] !== undefined ? _data["detail"] : <any>null;
        }
    }

    static fromJS(data: any): ErrorResponse {
        data = typeof data === 'object' ? data : {};
        let result = new ErrorResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code !== undefined ? this.code : <any>null;
        data["source"] = this.source !== undefined ? this.source : <any>null;
        data["title"] = this.title !== undefined ? this.title : <any>null;
        data["detail"] = this.detail !== undefined ? this.detail : <any>null;
        return data;
    }
}

export interface IErrorResponse {
    code?: number | null;
    source?: string | null;
    title?: string | null;
    detail?: string | null;
}

export class Etapa implements IEtapa {
    etaId?: number;
    etaDescripcion?: string | null;
    emprendedoresEtapas?: EmprendedoresEtapa[] | null;

    constructor(data?: IEtapa) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.etaId = _data["etaId"] !== undefined ? _data["etaId"] : <any>null;
            this.etaDescripcion = _data["etaDescripcion"] !== undefined ? _data["etaDescripcion"] : <any>null;
            if (Array.isArray(_data["emprendedoresEtapas"])) {
                this.emprendedoresEtapas = [] as any;
                for (let item of _data["emprendedoresEtapas"])
                    this.emprendedoresEtapas!.push(EmprendedoresEtapa.fromJS(item));
            }
            else {
                this.emprendedoresEtapas = <any>null;
            }
        }
    }

    static fromJS(data: any): Etapa {
        data = typeof data === 'object' ? data : {};
        let result = new Etapa();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["etaId"] = this.etaId !== undefined ? this.etaId : <any>null;
        data["etaDescripcion"] = this.etaDescripcion !== undefined ? this.etaDescripcion : <any>null;
        if (Array.isArray(this.emprendedoresEtapas)) {
            data["emprendedoresEtapas"] = [];
            for (let item of this.emprendedoresEtapas)
                data["emprendedoresEtapas"].push(item.toJSON());
        }
        return data;
    }
}

export interface IEtapa {
    etaId?: number;
    etaDescripcion?: string | null;
    emprendedoresEtapas?: EmprendedoresEtapa[] | null;
}

export class Evidencia implements IEvidencia {
    eviId?: number;
    eviAaaId?: number;
    eviDescripcion?: string | null;
    eviAaa?: ActividadesA3;
    respuestasA3s?: RespuestasA3[] | null;

    constructor(data?: IEvidencia) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.eviId = _data["eviId"] !== undefined ? _data["eviId"] : <any>null;
            this.eviAaaId = _data["eviAaaId"] !== undefined ? _data["eviAaaId"] : <any>null;
            this.eviDescripcion = _data["eviDescripcion"] !== undefined ? _data["eviDescripcion"] : <any>null;
            this.eviAaa = _data["eviAaa"] ? ActividadesA3.fromJS(_data["eviAaa"]) : <any>null;
            if (Array.isArray(_data["respuestasA3s"])) {
                this.respuestasA3s = [] as any;
                for (let item of _data["respuestasA3s"])
                    this.respuestasA3s!.push(RespuestasA3.fromJS(item));
            }
            else {
                this.respuestasA3s = <any>null;
            }
        }
    }

    static fromJS(data: any): Evidencia {
        data = typeof data === 'object' ? data : {};
        let result = new Evidencia();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["eviId"] = this.eviId !== undefined ? this.eviId : <any>null;
        data["eviAaaId"] = this.eviAaaId !== undefined ? this.eviAaaId : <any>null;
        data["eviDescripcion"] = this.eviDescripcion !== undefined ? this.eviDescripcion : <any>null;
        data["eviAaa"] = this.eviAaa ? this.eviAaa.toJSON() : <any>null;
        if (Array.isArray(this.respuestasA3s)) {
            data["respuestasA3s"] = [];
            for (let item of this.respuestasA3s)
                data["respuestasA3s"].push(item.toJSON());
        }
        return data;
    }
}

export interface IEvidencia {
    eviId?: number;
    eviAaaId?: number;
    eviDescripcion?: string | null;
    eviAaa?: ActividadesA3;
    respuestasA3s?: RespuestasA3[] | null;
}

export class EvidenciaDto implements IEvidenciaDto {
    eviId?: number;
    eviAaaId?: number;
    eviDescripcion?: string | null;

    constructor(data?: IEvidenciaDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.eviId = _data["eviId"] !== undefined ? _data["eviId"] : <any>null;
            this.eviAaaId = _data["eviAaaId"] !== undefined ? _data["eviAaaId"] : <any>null;
            this.eviDescripcion = _data["eviDescripcion"] !== undefined ? _data["eviDescripcion"] : <any>null;
        }
    }

    static fromJS(data: any): EvidenciaDto {
        data = typeof data === 'object' ? data : {};
        let result = new EvidenciaDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["eviId"] = this.eviId !== undefined ? this.eviId : <any>null;
        data["eviAaaId"] = this.eviAaaId !== undefined ? this.eviAaaId : <any>null;
        data["eviDescripcion"] = this.eviDescripcion !== undefined ? this.eviDescripcion : <any>null;
        return data;
    }
}

export interface IEvidenciaDto {
    eviId?: number;
    eviAaaId?: number;
    eviDescripcion?: string | null;
}

export class EvidenciaNivDto implements IEvidenciaNivDto {
    eviId?: number;
    eviAaaId?: number;
    eviDescripcion?: string | null;
    respuestasA3s?: RespuestasA3Dto[] | null;

    constructor(data?: IEvidenciaNivDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.eviId = _data["eviId"] !== undefined ? _data["eviId"] : <any>null;
            this.eviAaaId = _data["eviAaaId"] !== undefined ? _data["eviAaaId"] : <any>null;
            this.eviDescripcion = _data["eviDescripcion"] !== undefined ? _data["eviDescripcion"] : <any>null;
            if (Array.isArray(_data["respuestasA3s"])) {
                this.respuestasA3s = [] as any;
                for (let item of _data["respuestasA3s"])
                    this.respuestasA3s!.push(RespuestasA3Dto.fromJS(item));
            }
            else {
                this.respuestasA3s = <any>null;
            }
        }
    }

    static fromJS(data: any): EvidenciaNivDto {
        data = typeof data === 'object' ? data : {};
        let result = new EvidenciaNivDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["eviId"] = this.eviId !== undefined ? this.eviId : <any>null;
        data["eviAaaId"] = this.eviAaaId !== undefined ? this.eviAaaId : <any>null;
        data["eviDescripcion"] = this.eviDescripcion !== undefined ? this.eviDescripcion : <any>null;
        if (Array.isArray(this.respuestasA3s)) {
            data["respuestasA3s"] = [];
            for (let item of this.respuestasA3s)
                data["respuestasA3s"].push(item.toJSON());
        }
        return data;
    }
}

export interface IEvidenciaNivDto {
    eviId?: number;
    eviAaaId?: number;
    eviDescripcion?: string | null;
    respuestasA3s?: RespuestasA3Dto[] | null;
}

export class Giro implements IGiro {
    girId?: number;
    girDescripcion?: string | null;
    emprendedores?: Emprendedore[] | null;

    constructor(data?: IGiro) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.girId = _data["girId"] !== undefined ? _data["girId"] : <any>null;
            this.girDescripcion = _data["girDescripcion"] !== undefined ? _data["girDescripcion"] : <any>null;
            if (Array.isArray(_data["emprendedores"])) {
                this.emprendedores = [] as any;
                for (let item of _data["emprendedores"])
                    this.emprendedores!.push(Emprendedore.fromJS(item));
            }
            else {
                this.emprendedores = <any>null;
            }
        }
    }

    static fromJS(data: any): Giro {
        data = typeof data === 'object' ? data : {};
        let result = new Giro();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["girId"] = this.girId !== undefined ? this.girId : <any>null;
        data["girDescripcion"] = this.girDescripcion !== undefined ? this.girDescripcion : <any>null;
        if (Array.isArray(this.emprendedores)) {
            data["emprendedores"] = [];
            for (let item of this.emprendedores)
                data["emprendedores"].push(item.toJSON());
        }
        return data;
    }
}

export interface IGiro {
    girId?: number;
    girDescripcion?: string | null;
    emprendedores?: Emprendedore[] | null;
}

export class JwtAuthResult implements IJwtAuthResult {
    accessToken?: string | null;
    refreshToken?: RefreshToken;
    role?: string | null;

    constructor(data?: IJwtAuthResult) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.accessToken = _data["accessToken"] !== undefined ? _data["accessToken"] : <any>null;
            this.refreshToken = _data["refreshToken"] ? RefreshToken.fromJS(_data["refreshToken"]) : <any>null;
            this.role = _data["role"] !== undefined ? _data["role"] : <any>null;
        }
    }

    static fromJS(data: any): JwtAuthResult {
        data = typeof data === 'object' ? data : {};
        let result = new JwtAuthResult();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["accessToken"] = this.accessToken !== undefined ? this.accessToken : <any>null;
        data["refreshToken"] = this.refreshToken ? this.refreshToken.toJSON() : <any>null;
        data["role"] = this.role !== undefined ? this.role : <any>null;
        return data;
    }
}

export interface IJwtAuthResult {
    accessToken?: string | null;
    refreshToken?: RefreshToken;
    role?: string | null;
}

export class LoginRequest implements ILoginRequest {
    username!: string;
    password!: string;

    constructor(data?: ILoginRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.username = _data["username"] !== undefined ? _data["username"] : <any>null;
            this.password = _data["password"] !== undefined ? _data["password"] : <any>null;
        }
    }

    static fromJS(data: any): LoginRequest {
        data = typeof data === 'object' ? data : {};
        let result = new LoginRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["username"] = this.username !== undefined ? this.username : <any>null;
        data["password"] = this.password !== undefined ? this.password : <any>null;
        return data;
    }
}

export interface ILoginRequest {
    username: string;
    password: string;
}

export class LoginResponse implements ILoginResponse {
    success?: boolean;
    data?: JwtAuthResult;
    error?: ErrorResponse;

    constructor(data?: ILoginResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.success = _data["success"] !== undefined ? _data["success"] : <any>null;
            this.data = _data["data"] ? JwtAuthResult.fromJS(_data["data"]) : <any>null;
            this.error = _data["error"] ? ErrorResponse.fromJS(_data["error"]) : <any>null;
        }
    }

    static fromJS(data: any): LoginResponse {
        data = typeof data === 'object' ? data : {};
        let result = new LoginResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["success"] = this.success !== undefined ? this.success : <any>null;
        data["data"] = this.data ? this.data.toJSON() : <any>null;
        data["error"] = this.error ? this.error.toJSON() : <any>null;
        return data;
    }
}

export interface ILoginResponse {
    success?: boolean;
    data?: JwtAuthResult;
    error?: ErrorResponse;
}

export class Modulo implements IModulo {
    modId?: number;
    modModId?: number | null;
    modNombre?: string | null;
    modUrl?: string | null;
    modIcono?: string | null;
    modOrden?: number | null;
    inverseModMod?: Modulo[] | null;
    modMod?: Modulo;
    permisos?: Permiso[] | null;
    roles?: Role[] | null;

    constructor(data?: IModulo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.modId = _data["modId"] !== undefined ? _data["modId"] : <any>null;
            this.modModId = _data["modModId"] !== undefined ? _data["modModId"] : <any>null;
            this.modNombre = _data["modNombre"] !== undefined ? _data["modNombre"] : <any>null;
            this.modUrl = _data["modUrl"] !== undefined ? _data["modUrl"] : <any>null;
            this.modIcono = _data["modIcono"] !== undefined ? _data["modIcono"] : <any>null;
            this.modOrden = _data["modOrden"] !== undefined ? _data["modOrden"] : <any>null;
            if (Array.isArray(_data["inverseModMod"])) {
                this.inverseModMod = [] as any;
                for (let item of _data["inverseModMod"])
                    this.inverseModMod!.push(Modulo.fromJS(item));
            }
            else {
                this.inverseModMod = <any>null;
            }
            this.modMod = _data["modMod"] ? Modulo.fromJS(_data["modMod"]) : <any>null;
            if (Array.isArray(_data["permisos"])) {
                this.permisos = [] as any;
                for (let item of _data["permisos"])
                    this.permisos!.push(Permiso.fromJS(item));
            }
            else {
                this.permisos = <any>null;
            }
            if (Array.isArray(_data["roles"])) {
                this.roles = [] as any;
                for (let item of _data["roles"])
                    this.roles!.push(Role.fromJS(item));
            }
            else {
                this.roles = <any>null;
            }
        }
    }

    static fromJS(data: any): Modulo {
        data = typeof data === 'object' ? data : {};
        let result = new Modulo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["modId"] = this.modId !== undefined ? this.modId : <any>null;
        data["modModId"] = this.modModId !== undefined ? this.modModId : <any>null;
        data["modNombre"] = this.modNombre !== undefined ? this.modNombre : <any>null;
        data["modUrl"] = this.modUrl !== undefined ? this.modUrl : <any>null;
        data["modIcono"] = this.modIcono !== undefined ? this.modIcono : <any>null;
        data["modOrden"] = this.modOrden !== undefined ? this.modOrden : <any>null;
        if (Array.isArray(this.inverseModMod)) {
            data["inverseModMod"] = [];
            for (let item of this.inverseModMod)
                data["inverseModMod"].push(item.toJSON());
        }
        data["modMod"] = this.modMod ? this.modMod.toJSON() : <any>null;
        if (Array.isArray(this.permisos)) {
            data["permisos"] = [];
            for (let item of this.permisos)
                data["permisos"].push(item.toJSON());
        }
        if (Array.isArray(this.roles)) {
            data["roles"] = [];
            for (let item of this.roles)
                data["roles"].push(item.toJSON());
        }
        return data;
    }
}

export interface IModulo {
    modId?: number;
    modModId?: number | null;
    modNombre?: string | null;
    modUrl?: string | null;
    modIcono?: string | null;
    modOrden?: number | null;
    inverseModMod?: Modulo[] | null;
    modMod?: Modulo;
    permisos?: Permiso[] | null;
    roles?: Role[] | null;
}

export class Necesidade implements INecesidade {
    necId?: number;
    necDescripcion?: string | null;
    emprendedores?: Emprendedore[] | null;

    constructor(data?: INecesidade) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.necId = _data["necId"] !== undefined ? _data["necId"] : <any>null;
            this.necDescripcion = _data["necDescripcion"] !== undefined ? _data["necDescripcion"] : <any>null;
            if (Array.isArray(_data["emprendedores"])) {
                this.emprendedores = [] as any;
                for (let item of _data["emprendedores"])
                    this.emprendedores!.push(Emprendedore.fromJS(item));
            }
            else {
                this.emprendedores = <any>null;
            }
        }
    }

    static fromJS(data: any): Necesidade {
        data = typeof data === 'object' ? data : {};
        let result = new Necesidade();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["necId"] = this.necId !== undefined ? this.necId : <any>null;
        data["necDescripcion"] = this.necDescripcion !== undefined ? this.necDescripcion : <any>null;
        if (Array.isArray(this.emprendedores)) {
            data["emprendedores"] = [];
            for (let item of this.emprendedores)
                data["emprendedores"].push(item.toJSON());
        }
        return data;
    }
}

export interface INecesidade {
    necId?: number;
    necDescripcion?: string | null;
    emprendedores?: Emprendedore[] | null;
}

export class Nivele implements INivele {
    nivId?: number;
    nivDescripcion?: string | null;
    actividadesA3s?: ActividadesA3[] | null;

    constructor(data?: INivele) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nivId = _data["nivId"] !== undefined ? _data["nivId"] : <any>null;
            this.nivDescripcion = _data["nivDescripcion"] !== undefined ? _data["nivDescripcion"] : <any>null;
            if (Array.isArray(_data["actividadesA3s"])) {
                this.actividadesA3s = [] as any;
                for (let item of _data["actividadesA3s"])
                    this.actividadesA3s!.push(ActividadesA3.fromJS(item));
            }
            else {
                this.actividadesA3s = <any>null;
            }
        }
    }

    static fromJS(data: any): Nivele {
        data = typeof data === 'object' ? data : {};
        let result = new Nivele();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["nivId"] = this.nivId !== undefined ? this.nivId : <any>null;
        data["nivDescripcion"] = this.nivDescripcion !== undefined ? this.nivDescripcion : <any>null;
        if (Array.isArray(this.actividadesA3s)) {
            data["actividadesA3s"] = [];
            for (let item of this.actividadesA3s)
                data["actividadesA3s"].push(item.toJSON());
        }
        return data;
    }
}

export interface INivele {
    nivId?: number;
    nivDescripcion?: string | null;
    actividadesA3s?: ActividadesA3[] | null;
}

export class NivelesEstudio implements INivelesEstudio {
    nieId?: number;
    nieDescripcion?: string | null;
    emprendedores?: Emprendedore[] | null;

    constructor(data?: INivelesEstudio) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nieId = _data["nieId"] !== undefined ? _data["nieId"] : <any>null;
            this.nieDescripcion = _data["nieDescripcion"] !== undefined ? _data["nieDescripcion"] : <any>null;
            if (Array.isArray(_data["emprendedores"])) {
                this.emprendedores = [] as any;
                for (let item of _data["emprendedores"])
                    this.emprendedores!.push(Emprendedore.fromJS(item));
            }
            else {
                this.emprendedores = <any>null;
            }
        }
    }

    static fromJS(data: any): NivelesEstudio {
        data = typeof data === 'object' ? data : {};
        let result = new NivelesEstudio();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["nieId"] = this.nieId !== undefined ? this.nieId : <any>null;
        data["nieDescripcion"] = this.nieDescripcion !== undefined ? this.nieDescripcion : <any>null;
        if (Array.isArray(this.emprendedores)) {
            data["emprendedores"] = [];
            for (let item of this.emprendedores)
                data["emprendedores"].push(item.toJSON());
        }
        return data;
    }
}

export interface INivelesEstudio {
    nieId?: number;
    nieDescripcion?: string | null;
    emprendedores?: Emprendedore[] | null;
}

export class NumeroEmprendedoresPorNivelDto implements INumeroEmprendedoresPorNivelDto {
    nivelId?: number;
    nivelDescripcion?: string | null;
    numeroEmprendedores?: number;

    constructor(data?: INumeroEmprendedoresPorNivelDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nivelId = _data["nivelId"] !== undefined ? _data["nivelId"] : <any>null;
            this.nivelDescripcion = _data["nivelDescripcion"] !== undefined ? _data["nivelDescripcion"] : <any>null;
            this.numeroEmprendedores = _data["numeroEmprendedores"] !== undefined ? _data["numeroEmprendedores"] : <any>null;
        }
    }

    static fromJS(data: any): NumeroEmprendedoresPorNivelDto {
        data = typeof data === 'object' ? data : {};
        let result = new NumeroEmprendedoresPorNivelDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["nivelId"] = this.nivelId !== undefined ? this.nivelId : <any>null;
        data["nivelDescripcion"] = this.nivelDescripcion !== undefined ? this.nivelDescripcion : <any>null;
        data["numeroEmprendedores"] = this.numeroEmprendedores !== undefined ? this.numeroEmprendedores : <any>null;
        return data;
    }
}

export interface INumeroEmprendedoresPorNivelDto {
    nivelId?: number;
    nivelDescripcion?: string | null;
    numeroEmprendedores?: number;
}

export class Objetivo implements IObjetivo {
    objId?: number;
    objTisId?: number | null;
    objNombre?: string | null;
    objDescripcion?: string | null;
    objFormato?: string | null;
    objTis?: TiposSesione;
    sesionesObjetivos?: SesionesObjetivo[] | null;

    constructor(data?: IObjetivo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.objId = _data["objId"] !== undefined ? _data["objId"] : <any>null;
            this.objTisId = _data["objTisId"] !== undefined ? _data["objTisId"] : <any>null;
            this.objNombre = _data["objNombre"] !== undefined ? _data["objNombre"] : <any>null;
            this.objDescripcion = _data["objDescripcion"] !== undefined ? _data["objDescripcion"] : <any>null;
            this.objFormato = _data["objFormato"] !== undefined ? _data["objFormato"] : <any>null;
            this.objTis = _data["objTis"] ? TiposSesione.fromJS(_data["objTis"]) : <any>null;
            if (Array.isArray(_data["sesionesObjetivos"])) {
                this.sesionesObjetivos = [] as any;
                for (let item of _data["sesionesObjetivos"])
                    this.sesionesObjetivos!.push(SesionesObjetivo.fromJS(item));
            }
            else {
                this.sesionesObjetivos = <any>null;
            }
        }
    }

    static fromJS(data: any): Objetivo {
        data = typeof data === 'object' ? data : {};
        let result = new Objetivo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["objId"] = this.objId !== undefined ? this.objId : <any>null;
        data["objTisId"] = this.objTisId !== undefined ? this.objTisId : <any>null;
        data["objNombre"] = this.objNombre !== undefined ? this.objNombre : <any>null;
        data["objDescripcion"] = this.objDescripcion !== undefined ? this.objDescripcion : <any>null;
        data["objFormato"] = this.objFormato !== undefined ? this.objFormato : <any>null;
        data["objTis"] = this.objTis ? this.objTis.toJSON() : <any>null;
        if (Array.isArray(this.sesionesObjetivos)) {
            data["sesionesObjetivos"] = [];
            for (let item of this.sesionesObjetivos)
                data["sesionesObjetivos"].push(item.toJSON());
        }
        return data;
    }
}

export interface IObjetivo {
    objId?: number;
    objTisId?: number | null;
    objNombre?: string | null;
    objDescripcion?: string | null;
    objFormato?: string | null;
    objTis?: TiposSesione;
    sesionesObjetivos?: SesionesObjetivo[] | null;
}

export class ObjetivoDto implements IObjetivoDto {
    objId?: number;
    objTisId?: number | null;
    objNombre?: string | null;
    objDescripcion?: string | null;
    objFormato?: string | null;

    constructor(data?: IObjetivoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.objId = _data["objId"] !== undefined ? _data["objId"] : <any>null;
            this.objTisId = _data["objTisId"] !== undefined ? _data["objTisId"] : <any>null;
            this.objNombre = _data["objNombre"] !== undefined ? _data["objNombre"] : <any>null;
            this.objDescripcion = _data["objDescripcion"] !== undefined ? _data["objDescripcion"] : <any>null;
            this.objFormato = _data["objFormato"] !== undefined ? _data["objFormato"] : <any>null;
        }
    }

    static fromJS(data: any): ObjetivoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ObjetivoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["objId"] = this.objId !== undefined ? this.objId : <any>null;
        data["objTisId"] = this.objTisId !== undefined ? this.objTisId : <any>null;
        data["objNombre"] = this.objNombre !== undefined ? this.objNombre : <any>null;
        data["objDescripcion"] = this.objDescripcion !== undefined ? this.objDescripcion : <any>null;
        data["objFormato"] = this.objFormato !== undefined ? this.objFormato : <any>null;
        return data;
    }
}

export interface IObjetivoDto {
    objId?: number;
    objTisId?: number | null;
    objNombre?: string | null;
    objDescripcion?: string | null;
    objFormato?: string | null;
}

export class Permiso implements IPermiso {
    perModId?: number;
    perRolId?: number;
    perEdicion?: boolean | null;
    perMod?: Modulo;
    perRol?: Role;

    constructor(data?: IPermiso) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.perModId = _data["perModId"] !== undefined ? _data["perModId"] : <any>null;
            this.perRolId = _data["perRolId"] !== undefined ? _data["perRolId"] : <any>null;
            this.perEdicion = _data["perEdicion"] !== undefined ? _data["perEdicion"] : <any>null;
            this.perMod = _data["perMod"] ? Modulo.fromJS(_data["perMod"]) : <any>null;
            this.perRol = _data["perRol"] ? Role.fromJS(_data["perRol"]) : <any>null;
        }
    }

    static fromJS(data: any): Permiso {
        data = typeof data === 'object' ? data : {};
        let result = new Permiso();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["perModId"] = this.perModId !== undefined ? this.perModId : <any>null;
        data["perRolId"] = this.perRolId !== undefined ? this.perRolId : <any>null;
        data["perEdicion"] = this.perEdicion !== undefined ? this.perEdicion : <any>null;
        data["perMod"] = this.perMod ? this.perMod.toJSON() : <any>null;
        data["perRol"] = this.perRol ? this.perRol.toJSON() : <any>null;
        return data;
    }
}

export interface IPermiso {
    perModId?: number;
    perRolId?: number;
    perEdicion?: boolean | null;
    perMod?: Modulo;
    perRol?: Role;
}

export class PermisoDto implements IPermisoDto {
    perModId?: number;
    perRolId?: number;
    perEdicion?: boolean | null;

    constructor(data?: IPermisoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.perModId = _data["perModId"] !== undefined ? _data["perModId"] : <any>null;
            this.perRolId = _data["perRolId"] !== undefined ? _data["perRolId"] : <any>null;
            this.perEdicion = _data["perEdicion"] !== undefined ? _data["perEdicion"] : <any>null;
        }
    }

    static fromJS(data: any): PermisoDto {
        data = typeof data === 'object' ? data : {};
        let result = new PermisoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["perModId"] = this.perModId !== undefined ? this.perModId : <any>null;
        data["perRolId"] = this.perRolId !== undefined ? this.perRolId : <any>null;
        data["perEdicion"] = this.perEdicion !== undefined ? this.perEdicion : <any>null;
        return data;
    }
}

export interface IPermisoDto {
    perModId?: number;
    perRolId?: number;
    perEdicion?: boolean | null;
}

export class PilarNivelCompletadoDTO implements IPilarNivelCompletadoDTO {
    pilDescripcion?: string | null;
    nivelDescripcion?: string | null;
    porcentajeCompletado?: number;

    constructor(data?: IPilarNivelCompletadoDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pilDescripcion = _data["pilDescripcion"] !== undefined ? _data["pilDescripcion"] : <any>null;
            this.nivelDescripcion = _data["nivelDescripcion"] !== undefined ? _data["nivelDescripcion"] : <any>null;
            this.porcentajeCompletado = _data["porcentajeCompletado"] !== undefined ? _data["porcentajeCompletado"] : <any>null;
        }
    }

    static fromJS(data: any): PilarNivelCompletadoDTO {
        data = typeof data === 'object' ? data : {};
        let result = new PilarNivelCompletadoDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pilDescripcion"] = this.pilDescripcion !== undefined ? this.pilDescripcion : <any>null;
        data["nivelDescripcion"] = this.nivelDescripcion !== undefined ? this.nivelDescripcion : <any>null;
        data["porcentajeCompletado"] = this.porcentajeCompletado !== undefined ? this.porcentajeCompletado : <any>null;
        return data;
    }
}

export interface IPilarNivelCompletadoDTO {
    pilDescripcion?: string | null;
    nivelDescripcion?: string | null;
    porcentajeCompletado?: number;
}

export class Pilare implements IPilare {
    pilId?: number;
    pilDescripcion?: string | null;
    pilPondMax?: number | null;
    pilPondMin?: number | null;
    actividadesA3s?: ActividadesA3[] | null;
    pregunta?: Pregunta[] | null;

    constructor(data?: IPilare) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pilId = _data["pilId"] !== undefined ? _data["pilId"] : <any>null;
            this.pilDescripcion = _data["pilDescripcion"] !== undefined ? _data["pilDescripcion"] : <any>null;
            this.pilPondMax = _data["pilPondMax"] !== undefined ? _data["pilPondMax"] : <any>null;
            this.pilPondMin = _data["pilPondMin"] !== undefined ? _data["pilPondMin"] : <any>null;
            if (Array.isArray(_data["actividadesA3s"])) {
                this.actividadesA3s = [] as any;
                for (let item of _data["actividadesA3s"])
                    this.actividadesA3s!.push(ActividadesA3.fromJS(item));
            }
            else {
                this.actividadesA3s = <any>null;
            }
            if (Array.isArray(_data["pregunta"])) {
                this.pregunta = [] as any;
                for (let item of _data["pregunta"])
                    this.pregunta!.push(Pregunta.fromJS(item));
            }
            else {
                this.pregunta = <any>null;
            }
        }
    }

    static fromJS(data: any): Pilare {
        data = typeof data === 'object' ? data : {};
        let result = new Pilare();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pilId"] = this.pilId !== undefined ? this.pilId : <any>null;
        data["pilDescripcion"] = this.pilDescripcion !== undefined ? this.pilDescripcion : <any>null;
        data["pilPondMax"] = this.pilPondMax !== undefined ? this.pilPondMax : <any>null;
        data["pilPondMin"] = this.pilPondMin !== undefined ? this.pilPondMin : <any>null;
        if (Array.isArray(this.actividadesA3s)) {
            data["actividadesA3s"] = [];
            for (let item of this.actividadesA3s)
                data["actividadesA3s"].push(item.toJSON());
        }
        if (Array.isArray(this.pregunta)) {
            data["pregunta"] = [];
            for (let item of this.pregunta)
                data["pregunta"].push(item.toJSON());
        }
        return data;
    }
}

export interface IPilare {
    pilId?: number;
    pilDescripcion?: string | null;
    pilPondMax?: number | null;
    pilPondMin?: number | null;
    actividadesA3s?: ActividadesA3[] | null;
    pregunta?: Pregunta[] | null;
}

export class Pregunta implements IPregunta {
    preId?: number;
    prePregunta?: string | null;
    preActivo?: boolean;
    preTicId?: number;
    preEncId?: number;
    preTipoDato?: string | null;
    preRangoIni?: string | null;
    preRangoFin?: string | null;
    prePilId?: number;
    prePreIdTrigger?: number | null;
    preResIdTrigger?: number | null;
    preClaveCompuesta?: string | null;
    preNoSabe?: number | null;
    preValoracion?: boolean | null;
    preTipId?: number | null;
    preObligatoria?: boolean;
    contestacionesRespuesta?: ContestacionesRespuesta[] | null;
    preEnc?: Encuesta;
    prePil?: Pilare;
    preTip?: TiposPregunta;
    respuesta?: Respuesta[] | null;

    constructor(data?: IPregunta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.preId = _data["preId"] !== undefined ? _data["preId"] : <any>null;
            this.prePregunta = _data["prePregunta"] !== undefined ? _data["prePregunta"] : <any>null;
            this.preActivo = _data["preActivo"] !== undefined ? _data["preActivo"] : <any>null;
            this.preTicId = _data["preTicId"] !== undefined ? _data["preTicId"] : <any>null;
            this.preEncId = _data["preEncId"] !== undefined ? _data["preEncId"] : <any>null;
            this.preTipoDato = _data["preTipoDato"] !== undefined ? _data["preTipoDato"] : <any>null;
            this.preRangoIni = _data["preRangoIni"] !== undefined ? _data["preRangoIni"] : <any>null;
            this.preRangoFin = _data["preRangoFin"] !== undefined ? _data["preRangoFin"] : <any>null;
            this.prePilId = _data["prePilId"] !== undefined ? _data["prePilId"] : <any>null;
            this.prePreIdTrigger = _data["prePreIdTrigger"] !== undefined ? _data["prePreIdTrigger"] : <any>null;
            this.preResIdTrigger = _data["preResIdTrigger"] !== undefined ? _data["preResIdTrigger"] : <any>null;
            this.preClaveCompuesta = _data["preClaveCompuesta"] !== undefined ? _data["preClaveCompuesta"] : <any>null;
            this.preNoSabe = _data["preNoSabe"] !== undefined ? _data["preNoSabe"] : <any>null;
            this.preValoracion = _data["preValoracion"] !== undefined ? _data["preValoracion"] : <any>null;
            this.preTipId = _data["preTipId"] !== undefined ? _data["preTipId"] : <any>null;
            this.preObligatoria = _data["preObligatoria"] !== undefined ? _data["preObligatoria"] : <any>null;
            if (Array.isArray(_data["contestacionesRespuesta"])) {
                this.contestacionesRespuesta = [] as any;
                for (let item of _data["contestacionesRespuesta"])
                    this.contestacionesRespuesta!.push(ContestacionesRespuesta.fromJS(item));
            }
            else {
                this.contestacionesRespuesta = <any>null;
            }
            this.preEnc = _data["preEnc"] ? Encuesta.fromJS(_data["preEnc"]) : <any>null;
            this.prePil = _data["prePil"] ? Pilare.fromJS(_data["prePil"]) : <any>null;
            this.preTip = _data["preTip"] ? TiposPregunta.fromJS(_data["preTip"]) : <any>null;
            if (Array.isArray(_data["respuesta"])) {
                this.respuesta = [] as any;
                for (let item of _data["respuesta"])
                    this.respuesta!.push(Respuesta.fromJS(item));
            }
            else {
                this.respuesta = <any>null;
            }
        }
    }

    static fromJS(data: any): Pregunta {
        data = typeof data === 'object' ? data : {};
        let result = new Pregunta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["preId"] = this.preId !== undefined ? this.preId : <any>null;
        data["prePregunta"] = this.prePregunta !== undefined ? this.prePregunta : <any>null;
        data["preActivo"] = this.preActivo !== undefined ? this.preActivo : <any>null;
        data["preTicId"] = this.preTicId !== undefined ? this.preTicId : <any>null;
        data["preEncId"] = this.preEncId !== undefined ? this.preEncId : <any>null;
        data["preTipoDato"] = this.preTipoDato !== undefined ? this.preTipoDato : <any>null;
        data["preRangoIni"] = this.preRangoIni !== undefined ? this.preRangoIni : <any>null;
        data["preRangoFin"] = this.preRangoFin !== undefined ? this.preRangoFin : <any>null;
        data["prePilId"] = this.prePilId !== undefined ? this.prePilId : <any>null;
        data["prePreIdTrigger"] = this.prePreIdTrigger !== undefined ? this.prePreIdTrigger : <any>null;
        data["preResIdTrigger"] = this.preResIdTrigger !== undefined ? this.preResIdTrigger : <any>null;
        data["preClaveCompuesta"] = this.preClaveCompuesta !== undefined ? this.preClaveCompuesta : <any>null;
        data["preNoSabe"] = this.preNoSabe !== undefined ? this.preNoSabe : <any>null;
        data["preValoracion"] = this.preValoracion !== undefined ? this.preValoracion : <any>null;
        data["preTipId"] = this.preTipId !== undefined ? this.preTipId : <any>null;
        data["preObligatoria"] = this.preObligatoria !== undefined ? this.preObligatoria : <any>null;
        if (Array.isArray(this.contestacionesRespuesta)) {
            data["contestacionesRespuesta"] = [];
            for (let item of this.contestacionesRespuesta)
                data["contestacionesRespuesta"].push(item.toJSON());
        }
        data["preEnc"] = this.preEnc ? this.preEnc.toJSON() : <any>null;
        data["prePil"] = this.prePil ? this.prePil.toJSON() : <any>null;
        data["preTip"] = this.preTip ? this.preTip.toJSON() : <any>null;
        if (Array.isArray(this.respuesta)) {
            data["respuesta"] = [];
            for (let item of this.respuesta)
                data["respuesta"].push(item.toJSON());
        }
        return data;
    }
}

export interface IPregunta {
    preId?: number;
    prePregunta?: string | null;
    preActivo?: boolean;
    preTicId?: number;
    preEncId?: number;
    preTipoDato?: string | null;
    preRangoIni?: string | null;
    preRangoFin?: string | null;
    prePilId?: number;
    prePreIdTrigger?: number | null;
    preResIdTrigger?: number | null;
    preClaveCompuesta?: string | null;
    preNoSabe?: number | null;
    preValoracion?: boolean | null;
    preTipId?: number | null;
    preObligatoria?: boolean;
    contestacionesRespuesta?: ContestacionesRespuesta[] | null;
    preEnc?: Encuesta;
    prePil?: Pilare;
    preTip?: TiposPregunta;
    respuesta?: Respuesta[] | null;
}

export class PreguntaDto implements IPreguntaDto {
    preId?: number;
    prePregunta?: string | null;
    respuesta?: RespuestaDto[] | null;
    contestaciones?: ContestacionRespuestaDto[] | null;
    prePreIdTrigger?: number | null;
    preResIdTrigger?: number | null;
    preTipId?: number;
    prePilId?: number;

    constructor(data?: IPreguntaDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.preId = _data["preId"] !== undefined ? _data["preId"] : <any>null;
            this.prePregunta = _data["prePregunta"] !== undefined ? _data["prePregunta"] : <any>null;
            if (Array.isArray(_data["respuesta"])) {
                this.respuesta = [] as any;
                for (let item of _data["respuesta"])
                    this.respuesta!.push(RespuestaDto.fromJS(item));
            }
            else {
                this.respuesta = <any>null;
            }
            if (Array.isArray(_data["contestaciones"])) {
                this.contestaciones = [] as any;
                for (let item of _data["contestaciones"])
                    this.contestaciones!.push(ContestacionRespuestaDto.fromJS(item));
            }
            else {
                this.contestaciones = <any>null;
            }
            this.prePreIdTrigger = _data["prePreIdTrigger"] !== undefined ? _data["prePreIdTrigger"] : <any>null;
            this.preResIdTrigger = _data["preResIdTrigger"] !== undefined ? _data["preResIdTrigger"] : <any>null;
            this.preTipId = _data["preTipId"] !== undefined ? _data["preTipId"] : <any>null;
            this.prePilId = _data["prePilId"] !== undefined ? _data["prePilId"] : <any>null;
        }
    }

    static fromJS(data: any): PreguntaDto {
        data = typeof data === 'object' ? data : {};
        let result = new PreguntaDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["preId"] = this.preId !== undefined ? this.preId : <any>null;
        data["prePregunta"] = this.prePregunta !== undefined ? this.prePregunta : <any>null;
        if (Array.isArray(this.respuesta)) {
            data["respuesta"] = [];
            for (let item of this.respuesta)
                data["respuesta"].push(item.toJSON());
        }
        if (Array.isArray(this.contestaciones)) {
            data["contestaciones"] = [];
            for (let item of this.contestaciones)
                data["contestaciones"].push(item.toJSON());
        }
        data["prePreIdTrigger"] = this.prePreIdTrigger !== undefined ? this.prePreIdTrigger : <any>null;
        data["preResIdTrigger"] = this.preResIdTrigger !== undefined ? this.preResIdTrigger : <any>null;
        data["preTipId"] = this.preTipId !== undefined ? this.preTipId : <any>null;
        data["prePilId"] = this.prePilId !== undefined ? this.prePilId : <any>null;
        return data;
    }
}

export interface IPreguntaDto {
    preId?: number;
    prePregunta?: string | null;
    respuesta?: RespuestaDto[] | null;
    contestaciones?: ContestacionRespuestaDto[] | null;
    prePreIdTrigger?: number | null;
    preResIdTrigger?: number | null;
    preTipId?: number;
    prePilId?: number;
}

export class PromedioRequest implements IPromedioRequest {
    promedio?: number;

    constructor(data?: IPromedioRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.promedio = _data["promedio"] !== undefined ? _data["promedio"] : <any>null;
        }
    }

    static fromJS(data: any): PromedioRequest {
        data = typeof data === 'object' ? data : {};
        let result = new PromedioRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["promedio"] = this.promedio !== undefined ? this.promedio : <any>null;
        return data;
    }
}

export interface IPromedioRequest {
    promedio?: number;
}

export class RefreshToken implements IRefreshToken {
    userId?: number;
    name?: string | null;
    userName?: string | null;
    tokenString?: string | null;
    expireAt?: Date;
    empId?: number;
    empRazonSocial?: string | null;
    usrNombreCom?: string | null;

    constructor(data?: IRefreshToken) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.userId = _data["userId"] !== undefined ? _data["userId"] : <any>null;
            this.name = _data["name"] !== undefined ? _data["name"] : <any>null;
            this.userName = _data["userName"] !== undefined ? _data["userName"] : <any>null;
            this.tokenString = _data["tokenString"] !== undefined ? _data["tokenString"] : <any>null;
            this.expireAt = _data["expireAt"] ? new Date(_data["expireAt"].toString()) : <any>null;
            this.empId = _data["empId"] !== undefined ? _data["empId"] : <any>null;
            this.empRazonSocial = _data["empRazonSocial"] !== undefined ? _data["empRazonSocial"] : <any>null;
            this.usrNombreCom = _data["usrNombreCom"] !== undefined ? _data["usrNombreCom"] : <any>null;
        }
    }

    static fromJS(data: any): RefreshToken {
        data = typeof data === 'object' ? data : {};
        let result = new RefreshToken();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["userId"] = this.userId !== undefined ? this.userId : <any>null;
        data["name"] = this.name !== undefined ? this.name : <any>null;
        data["userName"] = this.userName !== undefined ? this.userName : <any>null;
        data["tokenString"] = this.tokenString !== undefined ? this.tokenString : <any>null;
        data["expireAt"] = this.expireAt ? this.expireAt.toISOString() : <any>null;
        data["empId"] = this.empId !== undefined ? this.empId : <any>null;
        data["empRazonSocial"] = this.empRazonSocial !== undefined ? this.empRazonSocial : <any>null;
        data["usrNombreCom"] = this.usrNombreCom !== undefined ? this.usrNombreCom : <any>null;
        return data;
    }
}

export interface IRefreshToken {
    userId?: number;
    name?: string | null;
    userName?: string | null;
    tokenString?: string | null;
    expireAt?: Date;
    empId?: number;
    empRazonSocial?: string | null;
    usrNombreCom?: string | null;
}

export class RefreshTokenRequest implements IRefreshTokenRequest {
    refreshToken?: string | null;

    constructor(data?: IRefreshTokenRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.refreshToken = _data["refreshToken"] !== undefined ? _data["refreshToken"] : <any>null;
        }
    }

    static fromJS(data: any): RefreshTokenRequest {
        data = typeof data === 'object' ? data : {};
        let result = new RefreshTokenRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["refreshToken"] = this.refreshToken !== undefined ? this.refreshToken : <any>null;
        return data;
    }
}

export interface IRefreshTokenRequest {
    refreshToken?: string | null;
}

export class Respuesta implements IRespuesta {
    resId?: number;
    resPreId?: number;
    resValor?: string | null;
    resValorEvaluacion?: number | null;
    contestacionesRespuesta?: ContestacionesRespuesta[] | null;
    resPre?: Pregunta;

    constructor(data?: IRespuesta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.resId = _data["resId"] !== undefined ? _data["resId"] : <any>null;
            this.resPreId = _data["resPreId"] !== undefined ? _data["resPreId"] : <any>null;
            this.resValor = _data["resValor"] !== undefined ? _data["resValor"] : <any>null;
            this.resValorEvaluacion = _data["resValorEvaluacion"] !== undefined ? _data["resValorEvaluacion"] : <any>null;
            if (Array.isArray(_data["contestacionesRespuesta"])) {
                this.contestacionesRespuesta = [] as any;
                for (let item of _data["contestacionesRespuesta"])
                    this.contestacionesRespuesta!.push(ContestacionesRespuesta.fromJS(item));
            }
            else {
                this.contestacionesRespuesta = <any>null;
            }
            this.resPre = _data["resPre"] ? Pregunta.fromJS(_data["resPre"]) : <any>null;
        }
    }

    static fromJS(data: any): Respuesta {
        data = typeof data === 'object' ? data : {};
        let result = new Respuesta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["resId"] = this.resId !== undefined ? this.resId : <any>null;
        data["resPreId"] = this.resPreId !== undefined ? this.resPreId : <any>null;
        data["resValor"] = this.resValor !== undefined ? this.resValor : <any>null;
        data["resValorEvaluacion"] = this.resValorEvaluacion !== undefined ? this.resValorEvaluacion : <any>null;
        if (Array.isArray(this.contestacionesRespuesta)) {
            data["contestacionesRespuesta"] = [];
            for (let item of this.contestacionesRespuesta)
                data["contestacionesRespuesta"].push(item.toJSON());
        }
        data["resPre"] = this.resPre ? this.resPre.toJSON() : <any>null;
        return data;
    }
}

export interface IRespuesta {
    resId?: number;
    resPreId?: number;
    resValor?: string | null;
    resValorEvaluacion?: number | null;
    contestacionesRespuesta?: ContestacionesRespuesta[] | null;
    resPre?: Pregunta;
}

export class RespuestaDto implements IRespuestaDto {
    resId?: number;
    resValor?: string | null;

    constructor(data?: IRespuestaDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.resId = _data["resId"] !== undefined ? _data["resId"] : <any>null;
            this.resValor = _data["resValor"] !== undefined ? _data["resValor"] : <any>null;
        }
    }

    static fromJS(data: any): RespuestaDto {
        data = typeof data === 'object' ? data : {};
        let result = new RespuestaDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["resId"] = this.resId !== undefined ? this.resId : <any>null;
        data["resValor"] = this.resValor !== undefined ? this.resValor : <any>null;
        return data;
    }
}

export interface IRespuestaDto {
    resId?: number;
    resValor?: string | null;
}

export class RespuestasA3 implements IRespuestasA3 {
    reaId?: number;
    reaEviId?: number;
    reaDescripcion?: string | null;
    reaUsrId?: number;
    reaFecha?: Date | null;
    reaEmpId?: number;
    reaArchivo?: string | null;
    reaEmp?: Emprendedore;
    reaEvi?: Evidencia;
    reaUsr?: Usuario;

    constructor(data?: IRespuestasA3) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.reaId = _data["reaId"] !== undefined ? _data["reaId"] : <any>null;
            this.reaEviId = _data["reaEviId"] !== undefined ? _data["reaEviId"] : <any>null;
            this.reaDescripcion = _data["reaDescripcion"] !== undefined ? _data["reaDescripcion"] : <any>null;
            this.reaUsrId = _data["reaUsrId"] !== undefined ? _data["reaUsrId"] : <any>null;
            this.reaFecha = _data["reaFecha"] ? new Date(_data["reaFecha"].toString()) : <any>null;
            this.reaEmpId = _data["reaEmpId"] !== undefined ? _data["reaEmpId"] : <any>null;
            this.reaArchivo = _data["reaArchivo"] !== undefined ? _data["reaArchivo"] : <any>null;
            this.reaEmp = _data["reaEmp"] ? Emprendedore.fromJS(_data["reaEmp"]) : <any>null;
            this.reaEvi = _data["reaEvi"] ? Evidencia.fromJS(_data["reaEvi"]) : <any>null;
            this.reaUsr = _data["reaUsr"] ? Usuario.fromJS(_data["reaUsr"]) : <any>null;
        }
    }

    static fromJS(data: any): RespuestasA3 {
        data = typeof data === 'object' ? data : {};
        let result = new RespuestasA3();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["reaId"] = this.reaId !== undefined ? this.reaId : <any>null;
        data["reaEviId"] = this.reaEviId !== undefined ? this.reaEviId : <any>null;
        data["reaDescripcion"] = this.reaDescripcion !== undefined ? this.reaDescripcion : <any>null;
        data["reaUsrId"] = this.reaUsrId !== undefined ? this.reaUsrId : <any>null;
        data["reaFecha"] = this.reaFecha ? this.reaFecha.toISOString() : <any>null;
        data["reaEmpId"] = this.reaEmpId !== undefined ? this.reaEmpId : <any>null;
        data["reaArchivo"] = this.reaArchivo !== undefined ? this.reaArchivo : <any>null;
        data["reaEmp"] = this.reaEmp ? this.reaEmp.toJSON() : <any>null;
        data["reaEvi"] = this.reaEvi ? this.reaEvi.toJSON() : <any>null;
        data["reaUsr"] = this.reaUsr ? this.reaUsr.toJSON() : <any>null;
        return data;
    }
}

export interface IRespuestasA3 {
    reaId?: number;
    reaEviId?: number;
    reaDescripcion?: string | null;
    reaUsrId?: number;
    reaFecha?: Date | null;
    reaEmpId?: number;
    reaArchivo?: string | null;
    reaEmp?: Emprendedore;
    reaEvi?: Evidencia;
    reaUsr?: Usuario;
}

export class RespuestasA3Dto implements IRespuestasA3Dto {
    reaId?: number;
    reaEviId?: number;
    reaDescripcion?: string | null;

    constructor(data?: IRespuestasA3Dto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.reaId = _data["reaId"] !== undefined ? _data["reaId"] : <any>null;
            this.reaEviId = _data["reaEviId"] !== undefined ? _data["reaEviId"] : <any>null;
            this.reaDescripcion = _data["reaDescripcion"] !== undefined ? _data["reaDescripcion"] : <any>null;
        }
    }

    static fromJS(data: any): RespuestasA3Dto {
        data = typeof data === 'object' ? data : {};
        let result = new RespuestasA3Dto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["reaId"] = this.reaId !== undefined ? this.reaId : <any>null;
        data["reaEviId"] = this.reaEviId !== undefined ? this.reaEviId : <any>null;
        data["reaDescripcion"] = this.reaDescripcion !== undefined ? this.reaDescripcion : <any>null;
        return data;
    }
}

export interface IRespuestasA3Dto {
    reaId?: number;
    reaEviId?: number;
    reaDescripcion?: string | null;
}

export class ResultadoDTO implements IResultadoDTO {
    conNombre?: string | null;
    conId?: number;
    sumaTotalPilares?: number;

    constructor(data?: IResultadoDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.conNombre = _data["conNombre"] !== undefined ? _data["conNombre"] : <any>null;
            this.conId = _data["conId"] !== undefined ? _data["conId"] : <any>null;
            this.sumaTotalPilares = _data["sumaTotalPilares"] !== undefined ? _data["sumaTotalPilares"] : <any>null;
        }
    }

    static fromJS(data: any): ResultadoDTO {
        data = typeof data === 'object' ? data : {};
        let result = new ResultadoDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["conNombre"] = this.conNombre !== undefined ? this.conNombre : <any>null;
        data["conId"] = this.conId !== undefined ? this.conId : <any>null;
        data["sumaTotalPilares"] = this.sumaTotalPilares !== undefined ? this.sumaTotalPilares : <any>null;
        return data;
    }
}

export interface IResultadoDTO {
    conNombre?: string | null;
    conId?: number;
    sumaTotalPilares?: number;
}

export class Role implements IRole {
    rolId?: number;
    rolModId?: number | null;
    rolEmpId?: number | null;
    rolNombre?: string | null;
    permisos?: Permiso[] | null;
    rolEmp?: Emprendedore;
    rolMod?: Modulo;
    usuarios?: Usuario[] | null;

    constructor(data?: IRole) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.rolId = _data["rolId"] !== undefined ? _data["rolId"] : <any>null;
            this.rolModId = _data["rolModId"] !== undefined ? _data["rolModId"] : <any>null;
            this.rolEmpId = _data["rolEmpId"] !== undefined ? _data["rolEmpId"] : <any>null;
            this.rolNombre = _data["rolNombre"] !== undefined ? _data["rolNombre"] : <any>null;
            if (Array.isArray(_data["permisos"])) {
                this.permisos = [] as any;
                for (let item of _data["permisos"])
                    this.permisos!.push(Permiso.fromJS(item));
            }
            else {
                this.permisos = <any>null;
            }
            this.rolEmp = _data["rolEmp"] ? Emprendedore.fromJS(_data["rolEmp"]) : <any>null;
            this.rolMod = _data["rolMod"] ? Modulo.fromJS(_data["rolMod"]) : <any>null;
            if (Array.isArray(_data["usuarios"])) {
                this.usuarios = [] as any;
                for (let item of _data["usuarios"])
                    this.usuarios!.push(Usuario.fromJS(item));
            }
            else {
                this.usuarios = <any>null;
            }
        }
    }

    static fromJS(data: any): Role {
        data = typeof data === 'object' ? data : {};
        let result = new Role();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["rolId"] = this.rolId !== undefined ? this.rolId : <any>null;
        data["rolModId"] = this.rolModId !== undefined ? this.rolModId : <any>null;
        data["rolEmpId"] = this.rolEmpId !== undefined ? this.rolEmpId : <any>null;
        data["rolNombre"] = this.rolNombre !== undefined ? this.rolNombre : <any>null;
        if (Array.isArray(this.permisos)) {
            data["permisos"] = [];
            for (let item of this.permisos)
                data["permisos"].push(item.toJSON());
        }
        data["rolEmp"] = this.rolEmp ? this.rolEmp.toJSON() : <any>null;
        data["rolMod"] = this.rolMod ? this.rolMod.toJSON() : <any>null;
        if (Array.isArray(this.usuarios)) {
            data["usuarios"] = [];
            for (let item of this.usuarios)
                data["usuarios"].push(item.toJSON());
        }
        return data;
    }
}

export interface IRole {
    rolId?: number;
    rolModId?: number | null;
    rolEmpId?: number | null;
    rolNombre?: string | null;
    permisos?: Permiso[] | null;
    rolEmp?: Emprendedore;
    rolMod?: Modulo;
    usuarios?: Usuario[] | null;
}

export class RoleDto implements IRoleDto {
    rolId?: number;
    rolModId?: number | null;
    rolEmpId?: number | null;
    rolNombre?: string | null;

    constructor(data?: IRoleDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.rolId = _data["rolId"] !== undefined ? _data["rolId"] : <any>null;
            this.rolModId = _data["rolModId"] !== undefined ? _data["rolModId"] : <any>null;
            this.rolEmpId = _data["rolEmpId"] !== undefined ? _data["rolEmpId"] : <any>null;
            this.rolNombre = _data["rolNombre"] !== undefined ? _data["rolNombre"] : <any>null;
        }
    }

    static fromJS(data: any): RoleDto {
        data = typeof data === 'object' ? data : {};
        let result = new RoleDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["rolId"] = this.rolId !== undefined ? this.rolId : <any>null;
        data["rolModId"] = this.rolModId !== undefined ? this.rolModId : <any>null;
        data["rolEmpId"] = this.rolEmpId !== undefined ? this.rolEmpId : <any>null;
        data["rolNombre"] = this.rolNombre !== undefined ? this.rolNombre : <any>null;
        return data;
    }
}

export interface IRoleDto {
    rolId?: number;
    rolModId?: number | null;
    rolEmpId?: number | null;
    rolNombre?: string | null;
}

export class Sesione implements ISesione {
    sesId?: number;
    sesTisId?: number;
    sesHoraIni?: Date;
    sesHoraFin?: Date;
    sesEmpId?: number | null;
    sesUsrId?: number | null;
    sesFecha?: Date;
    sesEmp?: Emprendedore;
    sesTis?: TiposSesione;
    sesUsr?: Usuario;
    sesionesObjetivos?: SesionesObjetivo[] | null;

    constructor(data?: ISesione) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.sesId = _data["sesId"] !== undefined ? _data["sesId"] : <any>null;
            this.sesTisId = _data["sesTisId"] !== undefined ? _data["sesTisId"] : <any>null;
            this.sesHoraIni = _data["sesHoraIni"] ? new Date(_data["sesHoraIni"].toString()) : <any>null;
            this.sesHoraFin = _data["sesHoraFin"] ? new Date(_data["sesHoraFin"].toString()) : <any>null;
            this.sesEmpId = _data["sesEmpId"] !== undefined ? _data["sesEmpId"] : <any>null;
            this.sesUsrId = _data["sesUsrId"] !== undefined ? _data["sesUsrId"] : <any>null;
            this.sesFecha = _data["sesFecha"] ? new Date(_data["sesFecha"].toString()) : <any>null;
            this.sesEmp = _data["sesEmp"] ? Emprendedore.fromJS(_data["sesEmp"]) : <any>null;
            this.sesTis = _data["sesTis"] ? TiposSesione.fromJS(_data["sesTis"]) : <any>null;
            this.sesUsr = _data["sesUsr"] ? Usuario.fromJS(_data["sesUsr"]) : <any>null;
            if (Array.isArray(_data["sesionesObjetivos"])) {
                this.sesionesObjetivos = [] as any;
                for (let item of _data["sesionesObjetivos"])
                    this.sesionesObjetivos!.push(SesionesObjetivo.fromJS(item));
            }
            else {
                this.sesionesObjetivos = <any>null;
            }
        }
    }

    static fromJS(data: any): Sesione {
        data = typeof data === 'object' ? data : {};
        let result = new Sesione();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["sesId"] = this.sesId !== undefined ? this.sesId : <any>null;
        data["sesTisId"] = this.sesTisId !== undefined ? this.sesTisId : <any>null;
        data["sesHoraIni"] = this.sesHoraIni ? this.sesHoraIni.toISOString() : <any>null;
        data["sesHoraFin"] = this.sesHoraFin ? this.sesHoraFin.toISOString() : <any>null;
        data["sesEmpId"] = this.sesEmpId !== undefined ? this.sesEmpId : <any>null;
        data["sesUsrId"] = this.sesUsrId !== undefined ? this.sesUsrId : <any>null;
        data["sesFecha"] = this.sesFecha ? formatDate(this.sesFecha) : <any>null;
        data["sesEmp"] = this.sesEmp ? this.sesEmp.toJSON() : <any>null;
        data["sesTis"] = this.sesTis ? this.sesTis.toJSON() : <any>null;
        data["sesUsr"] = this.sesUsr ? this.sesUsr.toJSON() : <any>null;
        if (Array.isArray(this.sesionesObjetivos)) {
            data["sesionesObjetivos"] = [];
            for (let item of this.sesionesObjetivos)
                data["sesionesObjetivos"].push(item.toJSON());
        }
        return data;
    }
}

export interface ISesione {
    sesId?: number;
    sesTisId?: number;
    sesHoraIni?: Date;
    sesHoraFin?: Date;
    sesEmpId?: number | null;
    sesUsrId?: number | null;
    sesFecha?: Date;
    sesEmp?: Emprendedore;
    sesTis?: TiposSesione;
    sesUsr?: Usuario;
    sesionesObjetivos?: SesionesObjetivo[] | null;
}

export class SesioneDto implements ISesioneDto {
    sesId?: number;
    sesTisId?: number;
    sesHoraIni?: Date;
    sesHoraFin?: Date;
    sesEmpId?: number | null;
    sesUsrId?: number | null;
    sesFecha?: Date;

    constructor(data?: ISesioneDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.sesId = _data["sesId"] !== undefined ? _data["sesId"] : <any>null;
            this.sesTisId = _data["sesTisId"] !== undefined ? _data["sesTisId"] : <any>null;
            this.sesHoraIni = _data["sesHoraIni"] ? new Date(_data["sesHoraIni"].toString()) : <any>null;
            this.sesHoraFin = _data["sesHoraFin"] ? new Date(_data["sesHoraFin"].toString()) : <any>null;
            this.sesEmpId = _data["sesEmpId"] !== undefined ? _data["sesEmpId"] : <any>null;
            this.sesUsrId = _data["sesUsrId"] !== undefined ? _data["sesUsrId"] : <any>null;
            this.sesFecha = _data["sesFecha"] ? new Date(_data["sesFecha"].toString()) : <any>null;
        }
    }

    static fromJS(data: any): SesioneDto {
        data = typeof data === 'object' ? data : {};
        let result = new SesioneDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["sesId"] = this.sesId !== undefined ? this.sesId : <any>null;
        data["sesTisId"] = this.sesTisId !== undefined ? this.sesTisId : <any>null;
        data["sesHoraIni"] = this.sesHoraIni ? this.sesHoraIni.toISOString() : <any>null;
        data["sesHoraFin"] = this.sesHoraFin ? this.sesHoraFin.toISOString() : <any>null;
        data["sesEmpId"] = this.sesEmpId !== undefined ? this.sesEmpId : <any>null;
        data["sesUsrId"] = this.sesUsrId !== undefined ? this.sesUsrId : <any>null;
        data["sesFecha"] = this.sesFecha ? formatDate(this.sesFecha) : <any>null;
        return data;
    }
}

export interface ISesioneDto {
    sesId?: number;
    sesTisId?: number;
    sesHoraIni?: Date;
    sesHoraFin?: Date;
    sesEmpId?: number | null;
    sesUsrId?: number | null;
    sesFecha?: Date;
}

export class SesionesObjetivo implements ISesionesObjetivo {
    seoId?: number;
    seoSesId?: number;
    seoObjId?: number;
    seoArchivo?: string | null;
    seoObj?: Objetivo;
    seoSes?: Sesione;

    constructor(data?: ISesionesObjetivo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.seoId = _data["seoId"] !== undefined ? _data["seoId"] : <any>null;
            this.seoSesId = _data["seoSesId"] !== undefined ? _data["seoSesId"] : <any>null;
            this.seoObjId = _data["seoObjId"] !== undefined ? _data["seoObjId"] : <any>null;
            this.seoArchivo = _data["seoArchivo"] !== undefined ? _data["seoArchivo"] : <any>null;
            this.seoObj = _data["seoObj"] ? Objetivo.fromJS(_data["seoObj"]) : <any>null;
            this.seoSes = _data["seoSes"] ? Sesione.fromJS(_data["seoSes"]) : <any>null;
        }
    }

    static fromJS(data: any): SesionesObjetivo {
        data = typeof data === 'object' ? data : {};
        let result = new SesionesObjetivo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["seoId"] = this.seoId !== undefined ? this.seoId : <any>null;
        data["seoSesId"] = this.seoSesId !== undefined ? this.seoSesId : <any>null;
        data["seoObjId"] = this.seoObjId !== undefined ? this.seoObjId : <any>null;
        data["seoArchivo"] = this.seoArchivo !== undefined ? this.seoArchivo : <any>null;
        data["seoObj"] = this.seoObj ? this.seoObj.toJSON() : <any>null;
        data["seoSes"] = this.seoSes ? this.seoSes.toJSON() : <any>null;
        return data;
    }
}

export interface ISesionesObjetivo {
    seoId?: number;
    seoSesId?: number;
    seoObjId?: number;
    seoArchivo?: string | null;
    seoObj?: Objetivo;
    seoSes?: Sesione;
}

export class SesionesTiposActividade implements ISesionesTiposActividade {
    staId?: number;
    staSesId?: number;
    staActId?: number;
    staDescripcion?: string | null;
    staValor?: boolean;
    staAct?: TiposActividade;
    staSes?: Sesione;

    constructor(data?: ISesionesTiposActividade) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.staId = _data["staId"] !== undefined ? _data["staId"] : <any>null;
            this.staSesId = _data["staSesId"] !== undefined ? _data["staSesId"] : <any>null;
            this.staActId = _data["staActId"] !== undefined ? _data["staActId"] : <any>null;
            this.staDescripcion = _data["staDescripcion"] !== undefined ? _data["staDescripcion"] : <any>null;
            this.staValor = _data["staValor"] !== undefined ? _data["staValor"] : <any>null;
            this.staAct = _data["staAct"] ? TiposActividade.fromJS(_data["staAct"]) : <any>null;
            this.staSes = _data["staSes"] ? Sesione.fromJS(_data["staSes"]) : <any>null;
        }
    }

    static fromJS(data: any): SesionesTiposActividade {
        data = typeof data === 'object' ? data : {};
        let result = new SesionesTiposActividade();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["staId"] = this.staId !== undefined ? this.staId : <any>null;
        data["staSesId"] = this.staSesId !== undefined ? this.staSesId : <any>null;
        data["staActId"] = this.staActId !== undefined ? this.staActId : <any>null;
        data["staDescripcion"] = this.staDescripcion !== undefined ? this.staDescripcion : <any>null;
        data["staValor"] = this.staValor !== undefined ? this.staValor : <any>null;
        data["staAct"] = this.staAct ? this.staAct.toJSON() : <any>null;
        data["staSes"] = this.staSes ? this.staSes.toJSON() : <any>null;
        return data;
    }
}

export interface ISesionesTiposActividade {
    staId?: number;
    staSesId?: number;
    staActId?: number;
    staDescripcion?: string | null;
    staValor?: boolean;
    staAct?: TiposActividade;
    staSes?: Sesione;
}

export class SumaPilarDto implements ISumaPilarDto {
    prePilId?: number;
    sumaPilar?: number | null;

    constructor(data?: ISumaPilarDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.prePilId = _data["prePilId"] !== undefined ? _data["prePilId"] : <any>null;
            this.sumaPilar = _data["sumaPilar"] !== undefined ? _data["sumaPilar"] : <any>null;
        }
    }

    static fromJS(data: any): SumaPilarDto {
        data = typeof data === 'object' ? data : {};
        let result = new SumaPilarDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["prePilId"] = this.prePilId !== undefined ? this.prePilId : <any>null;
        data["sumaPilar"] = this.sumaPilar !== undefined ? this.sumaPilar : <any>null;
        return data;
    }
}

export interface ISumaPilarDto {
    prePilId?: number;
    sumaPilar?: number | null;
}

export class TiposActividade implements ITiposActividade {
    actId?: number;
    actActId?: number | null;
    actDescription?: string | null;
    actPilId?: number;
    actAct?: TiposActividade;
    actPil?: Pilare;
    inverseActAct?: TiposActividade[] | null;
    sesionesTiposActividades?: SesionesTiposActividade[] | null;

    constructor(data?: ITiposActividade) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.actId = _data["actId"] !== undefined ? _data["actId"] : <any>null;
            this.actActId = _data["actActId"] !== undefined ? _data["actActId"] : <any>null;
            this.actDescription = _data["actDescription"] !== undefined ? _data["actDescription"] : <any>null;
            this.actPilId = _data["actPilId"] !== undefined ? _data["actPilId"] : <any>null;
            this.actAct = _data["actAct"] ? TiposActividade.fromJS(_data["actAct"]) : <any>null;
            this.actPil = _data["actPil"] ? Pilare.fromJS(_data["actPil"]) : <any>null;
            if (Array.isArray(_data["inverseActAct"])) {
                this.inverseActAct = [] as any;
                for (let item of _data["inverseActAct"])
                    this.inverseActAct!.push(TiposActividade.fromJS(item));
            }
            else {
                this.inverseActAct = <any>null;
            }
            if (Array.isArray(_data["sesionesTiposActividades"])) {
                this.sesionesTiposActividades = [] as any;
                for (let item of _data["sesionesTiposActividades"])
                    this.sesionesTiposActividades!.push(SesionesTiposActividade.fromJS(item));
            }
            else {
                this.sesionesTiposActividades = <any>null;
            }
        }
    }

    static fromJS(data: any): TiposActividade {
        data = typeof data === 'object' ? data : {};
        let result = new TiposActividade();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["actId"] = this.actId !== undefined ? this.actId : <any>null;
        data["actActId"] = this.actActId !== undefined ? this.actActId : <any>null;
        data["actDescription"] = this.actDescription !== undefined ? this.actDescription : <any>null;
        data["actPilId"] = this.actPilId !== undefined ? this.actPilId : <any>null;
        data["actAct"] = this.actAct ? this.actAct.toJSON() : <any>null;
        data["actPil"] = this.actPil ? this.actPil.toJSON() : <any>null;
        if (Array.isArray(this.inverseActAct)) {
            data["inverseActAct"] = [];
            for (let item of this.inverseActAct)
                data["inverseActAct"].push(item.toJSON());
        }
        if (Array.isArray(this.sesionesTiposActividades)) {
            data["sesionesTiposActividades"] = [];
            for (let item of this.sesionesTiposActividades)
                data["sesionesTiposActividades"].push(item.toJSON());
        }
        return data;
    }
}

export interface ITiposActividade {
    actId?: number;
    actActId?: number | null;
    actDescription?: string | null;
    actPilId?: number;
    actAct?: TiposActividade;
    actPil?: Pilare;
    inverseActAct?: TiposActividade[] | null;
    sesionesTiposActividades?: SesionesTiposActividade[] | null;
}

export class TiposAspecto implements ITiposAspecto {
    tiaId?: number;
    tiaNombre?: string | null;
    tiposSesiones?: TiposSesione[] | null;

    constructor(data?: ITiposAspecto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tiaId = _data["tiaId"] !== undefined ? _data["tiaId"] : <any>null;
            this.tiaNombre = _data["tiaNombre"] !== undefined ? _data["tiaNombre"] : <any>null;
            if (Array.isArray(_data["tiposSesiones"])) {
                this.tiposSesiones = [] as any;
                for (let item of _data["tiposSesiones"])
                    this.tiposSesiones!.push(TiposSesione.fromJS(item));
            }
            else {
                this.tiposSesiones = <any>null;
            }
        }
    }

    static fromJS(data: any): TiposAspecto {
        data = typeof data === 'object' ? data : {};
        let result = new TiposAspecto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tiaId"] = this.tiaId !== undefined ? this.tiaId : <any>null;
        data["tiaNombre"] = this.tiaNombre !== undefined ? this.tiaNombre : <any>null;
        if (Array.isArray(this.tiposSesiones)) {
            data["tiposSesiones"] = [];
            for (let item of this.tiposSesiones)
                data["tiposSesiones"].push(item.toJSON());
        }
        return data;
    }
}

export interface ITiposAspecto {
    tiaId?: number;
    tiaNombre?: string | null;
    tiposSesiones?: TiposSesione[] | null;
}

export class TiposControle implements ITiposControle {
    ticId?: number;
    ticDescripcion?: string | null;
    tiposPregunta?: TiposPregunta[] | null;

    constructor(data?: ITiposControle) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ticId = _data["ticId"] !== undefined ? _data["ticId"] : <any>null;
            this.ticDescripcion = _data["ticDescripcion"] !== undefined ? _data["ticDescripcion"] : <any>null;
            if (Array.isArray(_data["tiposPregunta"])) {
                this.tiposPregunta = [] as any;
                for (let item of _data["tiposPregunta"])
                    this.tiposPregunta!.push(TiposPregunta.fromJS(item));
            }
            else {
                this.tiposPregunta = <any>null;
            }
        }
    }

    static fromJS(data: any): TiposControle {
        data = typeof data === 'object' ? data : {};
        let result = new TiposControle();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ticId"] = this.ticId !== undefined ? this.ticId : <any>null;
        data["ticDescripcion"] = this.ticDescripcion !== undefined ? this.ticDescripcion : <any>null;
        if (Array.isArray(this.tiposPregunta)) {
            data["tiposPregunta"] = [];
            for (let item of this.tiposPregunta)
                data["tiposPregunta"].push(item.toJSON());
        }
        return data;
    }
}

export interface ITiposControle {
    ticId?: number;
    ticDescripcion?: string | null;
    tiposPregunta?: TiposPregunta[] | null;
}

export class TiposPregunta implements ITiposPregunta {
    tipId?: number;
    tipTicId?: number;
    tipDescripcion?: string | null;
    tipValoracion?: boolean | null;
    pregunta?: Pregunta[] | null;
    tipTic?: TiposControle;
    tiposPreguntasRespuesta?: TiposPreguntasRespuesta[] | null;

    constructor(data?: ITiposPregunta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tipId = _data["tipId"] !== undefined ? _data["tipId"] : <any>null;
            this.tipTicId = _data["tipTicId"] !== undefined ? _data["tipTicId"] : <any>null;
            this.tipDescripcion = _data["tipDescripcion"] !== undefined ? _data["tipDescripcion"] : <any>null;
            this.tipValoracion = _data["tipValoracion"] !== undefined ? _data["tipValoracion"] : <any>null;
            if (Array.isArray(_data["pregunta"])) {
                this.pregunta = [] as any;
                for (let item of _data["pregunta"])
                    this.pregunta!.push(Pregunta.fromJS(item));
            }
            else {
                this.pregunta = <any>null;
            }
            this.tipTic = _data["tipTic"] ? TiposControle.fromJS(_data["tipTic"]) : <any>null;
            if (Array.isArray(_data["tiposPreguntasRespuesta"])) {
                this.tiposPreguntasRespuesta = [] as any;
                for (let item of _data["tiposPreguntasRespuesta"])
                    this.tiposPreguntasRespuesta!.push(TiposPreguntasRespuesta.fromJS(item));
            }
            else {
                this.tiposPreguntasRespuesta = <any>null;
            }
        }
    }

    static fromJS(data: any): TiposPregunta {
        data = typeof data === 'object' ? data : {};
        let result = new TiposPregunta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tipId"] = this.tipId !== undefined ? this.tipId : <any>null;
        data["tipTicId"] = this.tipTicId !== undefined ? this.tipTicId : <any>null;
        data["tipDescripcion"] = this.tipDescripcion !== undefined ? this.tipDescripcion : <any>null;
        data["tipValoracion"] = this.tipValoracion !== undefined ? this.tipValoracion : <any>null;
        if (Array.isArray(this.pregunta)) {
            data["pregunta"] = [];
            for (let item of this.pregunta)
                data["pregunta"].push(item.toJSON());
        }
        data["tipTic"] = this.tipTic ? this.tipTic.toJSON() : <any>null;
        if (Array.isArray(this.tiposPreguntasRespuesta)) {
            data["tiposPreguntasRespuesta"] = [];
            for (let item of this.tiposPreguntasRespuesta)
                data["tiposPreguntasRespuesta"].push(item.toJSON());
        }
        return data;
    }
}

export interface ITiposPregunta {
    tipId?: number;
    tipTicId?: number;
    tipDescripcion?: string | null;
    tipValoracion?: boolean | null;
    pregunta?: Pregunta[] | null;
    tipTic?: TiposControle;
    tiposPreguntasRespuesta?: TiposPreguntasRespuesta[] | null;
}

export class TiposPreguntasRespuesta implements ITiposPreguntasRespuesta {
    tprId?: number;
    tprTipId?: number;
    tprRespuesta?: string | null;
    tprValorEvaluacion?: number | null;
    tprTip?: TiposPregunta;

    constructor(data?: ITiposPreguntasRespuesta) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tprId = _data["tprId"] !== undefined ? _data["tprId"] : <any>null;
            this.tprTipId = _data["tprTipId"] !== undefined ? _data["tprTipId"] : <any>null;
            this.tprRespuesta = _data["tprRespuesta"] !== undefined ? _data["tprRespuesta"] : <any>null;
            this.tprValorEvaluacion = _data["tprValorEvaluacion"] !== undefined ? _data["tprValorEvaluacion"] : <any>null;
            this.tprTip = _data["tprTip"] ? TiposPregunta.fromJS(_data["tprTip"]) : <any>null;
        }
    }

    static fromJS(data: any): TiposPreguntasRespuesta {
        data = typeof data === 'object' ? data : {};
        let result = new TiposPreguntasRespuesta();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tprId"] = this.tprId !== undefined ? this.tprId : <any>null;
        data["tprTipId"] = this.tprTipId !== undefined ? this.tprTipId : <any>null;
        data["tprRespuesta"] = this.tprRespuesta !== undefined ? this.tprRespuesta : <any>null;
        data["tprValorEvaluacion"] = this.tprValorEvaluacion !== undefined ? this.tprValorEvaluacion : <any>null;
        data["tprTip"] = this.tprTip ? this.tprTip.toJSON() : <any>null;
        return data;
    }
}

export interface ITiposPreguntasRespuesta {
    tprId?: number;
    tprTipId?: number;
    tprRespuesta?: string | null;
    tprValorEvaluacion?: number | null;
    tprTip?: TiposPregunta;
}

export class TiposSesione implements ITiposSesione {
    tisId?: number;
    tisTiaId?: number | null;
    tisNombre?: string | null;
    tisDuracion?: number | null;
    tisLineamiento?: string | null;
    objetivos?: Objetivo[] | null;
    sesiones?: Sesione[] | null;
    tisTia?: TiposAspecto;

    constructor(data?: ITiposSesione) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tisId = _data["tisId"] !== undefined ? _data["tisId"] : <any>null;
            this.tisTiaId = _data["tisTiaId"] !== undefined ? _data["tisTiaId"] : <any>null;
            this.tisNombre = _data["tisNombre"] !== undefined ? _data["tisNombre"] : <any>null;
            this.tisDuracion = _data["tisDuracion"] !== undefined ? _data["tisDuracion"] : <any>null;
            this.tisLineamiento = _data["tisLineamiento"] !== undefined ? _data["tisLineamiento"] : <any>null;
            if (Array.isArray(_data["objetivos"])) {
                this.objetivos = [] as any;
                for (let item of _data["objetivos"])
                    this.objetivos!.push(Objetivo.fromJS(item));
            }
            else {
                this.objetivos = <any>null;
            }
            if (Array.isArray(_data["sesiones"])) {
                this.sesiones = [] as any;
                for (let item of _data["sesiones"])
                    this.sesiones!.push(Sesione.fromJS(item));
            }
            else {
                this.sesiones = <any>null;
            }
            this.tisTia = _data["tisTia"] ? TiposAspecto.fromJS(_data["tisTia"]) : <any>null;
        }
    }

    static fromJS(data: any): TiposSesione {
        data = typeof data === 'object' ? data : {};
        let result = new TiposSesione();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tisId"] = this.tisId !== undefined ? this.tisId : <any>null;
        data["tisTiaId"] = this.tisTiaId !== undefined ? this.tisTiaId : <any>null;
        data["tisNombre"] = this.tisNombre !== undefined ? this.tisNombre : <any>null;
        data["tisDuracion"] = this.tisDuracion !== undefined ? this.tisDuracion : <any>null;
        data["tisLineamiento"] = this.tisLineamiento !== undefined ? this.tisLineamiento : <any>null;
        if (Array.isArray(this.objetivos)) {
            data["objetivos"] = [];
            for (let item of this.objetivos)
                data["objetivos"].push(item.toJSON());
        }
        if (Array.isArray(this.sesiones)) {
            data["sesiones"] = [];
            for (let item of this.sesiones)
                data["sesiones"].push(item.toJSON());
        }
        data["tisTia"] = this.tisTia ? this.tisTia.toJSON() : <any>null;
        return data;
    }
}

export interface ITiposSesione {
    tisId?: number;
    tisTiaId?: number | null;
    tisNombre?: string | null;
    tisDuracion?: number | null;
    tisLineamiento?: string | null;
    objetivos?: Objetivo[] | null;
    sesiones?: Sesione[] | null;
    tisTia?: TiposAspecto;
}

export class TiposSesionesDto implements ITiposSesionesDto {
    tisId?: number;
    tisNombre?: string | null;
    numeroSesiones?: number;

    constructor(data?: ITiposSesionesDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tisId = _data["tisId"] !== undefined ? _data["tisId"] : <any>null;
            this.tisNombre = _data["tisNombre"] !== undefined ? _data["tisNombre"] : <any>null;
            this.numeroSesiones = _data["numeroSesiones"] !== undefined ? _data["numeroSesiones"] : <any>null;
        }
    }

    static fromJS(data: any): TiposSesionesDto {
        data = typeof data === 'object' ? data : {};
        let result = new TiposSesionesDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tisId"] = this.tisId !== undefined ? this.tisId : <any>null;
        data["tisNombre"] = this.tisNombre !== undefined ? this.tisNombre : <any>null;
        data["numeroSesiones"] = this.numeroSesiones !== undefined ? this.numeroSesiones : <any>null;
        return data;
    }
}

export interface ITiposSesionesDto {
    tisId?: number;
    tisNombre?: string | null;
    numeroSesiones?: number;
}

export class Usuario implements IUsuario {
    usrId?: number;
    usrUsrId?: number | null;
    usrRolId?: number | null;
    usrEmpId?: number | null;
    usrNombre?: string | null;
    usrApellidoPaterno?: string | null;
    usrApellidoMaterno?: string | null;
    usrTelefono?: string | null;
    usrCelular?: string | null;
    usrEmail?: string | null;
    usrFechaIngreso?: Date;
    usrUsuario?: string | null;
    usrContrasena?: string | null;
    usrFechaBaja?: Date | null;
    usrActivo?: boolean | null;
    cargasEncuesta?: CargasEncuesta[] | null;
    emprendedoresEtapas?: EmprendedoresEtapa[] | null;
    inverseUsrUsr?: Usuario[] | null;
    respuestasA3s?: RespuestasA3[] | null;
    sesiones?: Sesione[] | null;
    usrEmp?: Emprendedore;
    usrRol?: Role;
    usrUsr?: Usuario;

    constructor(data?: IUsuario) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.usrId = _data["usrId"] !== undefined ? _data["usrId"] : <any>null;
            this.usrUsrId = _data["usrUsrId"] !== undefined ? _data["usrUsrId"] : <any>null;
            this.usrRolId = _data["usrRolId"] !== undefined ? _data["usrRolId"] : <any>null;
            this.usrEmpId = _data["usrEmpId"] !== undefined ? _data["usrEmpId"] : <any>null;
            this.usrNombre = _data["usrNombre"] !== undefined ? _data["usrNombre"] : <any>null;
            this.usrApellidoPaterno = _data["usrApellidoPaterno"] !== undefined ? _data["usrApellidoPaterno"] : <any>null;
            this.usrApellidoMaterno = _data["usrApellidoMaterno"] !== undefined ? _data["usrApellidoMaterno"] : <any>null;
            this.usrTelefono = _data["usrTelefono"] !== undefined ? _data["usrTelefono"] : <any>null;
            this.usrCelular = _data["usrCelular"] !== undefined ? _data["usrCelular"] : <any>null;
            this.usrEmail = _data["usrEmail"] !== undefined ? _data["usrEmail"] : <any>null;
            this.usrFechaIngreso = _data["usrFechaIngreso"] ? new Date(_data["usrFechaIngreso"].toString()) : <any>null;
            this.usrUsuario = _data["usrUsuario"] !== undefined ? _data["usrUsuario"] : <any>null;
            this.usrContrasena = _data["usrContrasena"] !== undefined ? _data["usrContrasena"] : <any>null;
            this.usrFechaBaja = _data["usrFechaBaja"] ? new Date(_data["usrFechaBaja"].toString()) : <any>null;
            this.usrActivo = _data["usrActivo"] !== undefined ? _data["usrActivo"] : <any>null;
            if (Array.isArray(_data["cargasEncuesta"])) {
                this.cargasEncuesta = [] as any;
                for (let item of _data["cargasEncuesta"])
                    this.cargasEncuesta!.push(CargasEncuesta.fromJS(item));
            }
            else {
                this.cargasEncuesta = <any>null;
            }
            if (Array.isArray(_data["emprendedoresEtapas"])) {
                this.emprendedoresEtapas = [] as any;
                for (let item of _data["emprendedoresEtapas"])
                    this.emprendedoresEtapas!.push(EmprendedoresEtapa.fromJS(item));
            }
            else {
                this.emprendedoresEtapas = <any>null;
            }
            if (Array.isArray(_data["inverseUsrUsr"])) {
                this.inverseUsrUsr = [] as any;
                for (let item of _data["inverseUsrUsr"])
                    this.inverseUsrUsr!.push(Usuario.fromJS(item));
            }
            else {
                this.inverseUsrUsr = <any>null;
            }
            if (Array.isArray(_data["respuestasA3s"])) {
                this.respuestasA3s = [] as any;
                for (let item of _data["respuestasA3s"])
                    this.respuestasA3s!.push(RespuestasA3.fromJS(item));
            }
            else {
                this.respuestasA3s = <any>null;
            }
            if (Array.isArray(_data["sesiones"])) {
                this.sesiones = [] as any;
                for (let item of _data["sesiones"])
                    this.sesiones!.push(Sesione.fromJS(item));
            }
            else {
                this.sesiones = <any>null;
            }
            this.usrEmp = _data["usrEmp"] ? Emprendedore.fromJS(_data["usrEmp"]) : <any>null;
            this.usrRol = _data["usrRol"] ? Role.fromJS(_data["usrRol"]) : <any>null;
            this.usrUsr = _data["usrUsr"] ? Usuario.fromJS(_data["usrUsr"]) : <any>null;
        }
    }

    static fromJS(data: any): Usuario {
        data = typeof data === 'object' ? data : {};
        let result = new Usuario();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["usrId"] = this.usrId !== undefined ? this.usrId : <any>null;
        data["usrUsrId"] = this.usrUsrId !== undefined ? this.usrUsrId : <any>null;
        data["usrRolId"] = this.usrRolId !== undefined ? this.usrRolId : <any>null;
        data["usrEmpId"] = this.usrEmpId !== undefined ? this.usrEmpId : <any>null;
        data["usrNombre"] = this.usrNombre !== undefined ? this.usrNombre : <any>null;
        data["usrApellidoPaterno"] = this.usrApellidoPaterno !== undefined ? this.usrApellidoPaterno : <any>null;
        data["usrApellidoMaterno"] = this.usrApellidoMaterno !== undefined ? this.usrApellidoMaterno : <any>null;
        data["usrTelefono"] = this.usrTelefono !== undefined ? this.usrTelefono : <any>null;
        data["usrCelular"] = this.usrCelular !== undefined ? this.usrCelular : <any>null;
        data["usrEmail"] = this.usrEmail !== undefined ? this.usrEmail : <any>null;
        data["usrFechaIngreso"] = this.usrFechaIngreso ? formatDate(this.usrFechaIngreso) : <any>null;
        data["usrUsuario"] = this.usrUsuario !== undefined ? this.usrUsuario : <any>null;
        data["usrContrasena"] = this.usrContrasena !== undefined ? this.usrContrasena : <any>null;
        data["usrFechaBaja"] = this.usrFechaBaja ? this.usrFechaBaja.toISOString() : <any>null;
        data["usrActivo"] = this.usrActivo !== undefined ? this.usrActivo : <any>null;
        if (Array.isArray(this.cargasEncuesta)) {
            data["cargasEncuesta"] = [];
            for (let item of this.cargasEncuesta)
                data["cargasEncuesta"].push(item.toJSON());
        }
        if (Array.isArray(this.emprendedoresEtapas)) {
            data["emprendedoresEtapas"] = [];
            for (let item of this.emprendedoresEtapas)
                data["emprendedoresEtapas"].push(item.toJSON());
        }
        if (Array.isArray(this.inverseUsrUsr)) {
            data["inverseUsrUsr"] = [];
            for (let item of this.inverseUsrUsr)
                data["inverseUsrUsr"].push(item.toJSON());
        }
        if (Array.isArray(this.respuestasA3s)) {
            data["respuestasA3s"] = [];
            for (let item of this.respuestasA3s)
                data["respuestasA3s"].push(item.toJSON());
        }
        if (Array.isArray(this.sesiones)) {
            data["sesiones"] = [];
            for (let item of this.sesiones)
                data["sesiones"].push(item.toJSON());
        }
        data["usrEmp"] = this.usrEmp ? this.usrEmp.toJSON() : <any>null;
        data["usrRol"] = this.usrRol ? this.usrRol.toJSON() : <any>null;
        data["usrUsr"] = this.usrUsr ? this.usrUsr.toJSON() : <any>null;
        return data;
    }
}

export interface IUsuario {
    usrId?: number;
    usrUsrId?: number | null;
    usrRolId?: number | null;
    usrEmpId?: number | null;
    usrNombre?: string | null;
    usrApellidoPaterno?: string | null;
    usrApellidoMaterno?: string | null;
    usrTelefono?: string | null;
    usrCelular?: string | null;
    usrEmail?: string | null;
    usrFechaIngreso?: Date;
    usrUsuario?: string | null;
    usrContrasena?: string | null;
    usrFechaBaja?: Date | null;
    usrActivo?: boolean | null;
    cargasEncuesta?: CargasEncuesta[] | null;
    emprendedoresEtapas?: EmprendedoresEtapa[] | null;
    inverseUsrUsr?: Usuario[] | null;
    respuestasA3s?: RespuestasA3[] | null;
    sesiones?: Sesione[] | null;
    usrEmp?: Emprendedore;
    usrRol?: Role;
    usrUsr?: Usuario;
}

export class UsuarioDto implements IUsuarioDto {
    usrId?: number;
    usrUsrId?: number | null;
    usrRolId?: number | null;
    usrEmpId?: number | null;
    usrNombre?: string | null;
    usrApellidoPaterno?: string | null;
    usrApellidoMaterno?: string | null;
    usrTelefono?: string | null;
    usrCelular?: string | null;
    usrEmail?: string | null;
    usrFechaIngreso?: Date;
    usrUsuario?: string | null;
    usrContrasena?: string | null;
    usrFechaBaja?: Date | null;
    usrActivo?: boolean | null;
    razonSocial?: string | null;
    usrRol?: Role;

    constructor(data?: IUsuarioDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.usrId = _data["usrId"] !== undefined ? _data["usrId"] : <any>null;
            this.usrUsrId = _data["usrUsrId"] !== undefined ? _data["usrUsrId"] : <any>null;
            this.usrRolId = _data["usrRolId"] !== undefined ? _data["usrRolId"] : <any>null;
            this.usrEmpId = _data["usrEmpId"] !== undefined ? _data["usrEmpId"] : <any>null;
            this.usrNombre = _data["usrNombre"] !== undefined ? _data["usrNombre"] : <any>null;
            this.usrApellidoPaterno = _data["usrApellidoPaterno"] !== undefined ? _data["usrApellidoPaterno"] : <any>null;
            this.usrApellidoMaterno = _data["usrApellidoMaterno"] !== undefined ? _data["usrApellidoMaterno"] : <any>null;
            this.usrTelefono = _data["usrTelefono"] !== undefined ? _data["usrTelefono"] : <any>null;
            this.usrCelular = _data["usrCelular"] !== undefined ? _data["usrCelular"] : <any>null;
            this.usrEmail = _data["usrEmail"] !== undefined ? _data["usrEmail"] : <any>null;
            this.usrFechaIngreso = _data["usrFechaIngreso"] ? new Date(_data["usrFechaIngreso"].toString()) : <any>null;
            this.usrUsuario = _data["usrUsuario"] !== undefined ? _data["usrUsuario"] : <any>null;
            this.usrContrasena = _data["usrContrasena"] !== undefined ? _data["usrContrasena"] : <any>null;
            this.usrFechaBaja = _data["usrFechaBaja"] ? new Date(_data["usrFechaBaja"].toString()) : <any>null;
            this.usrActivo = _data["usrActivo"] !== undefined ? _data["usrActivo"] : <any>null;
            this.razonSocial = _data["razonSocial"] !== undefined ? _data["razonSocial"] : <any>null;
            this.usrRol = _data["usrRol"] ? Role.fromJS(_data["usrRol"]) : <any>null;
        }
    }

    static fromJS(data: any): UsuarioDto {
        data = typeof data === 'object' ? data : {};
        let result = new UsuarioDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["usrId"] = this.usrId !== undefined ? this.usrId : <any>null;
        data["usrUsrId"] = this.usrUsrId !== undefined ? this.usrUsrId : <any>null;
        data["usrRolId"] = this.usrRolId !== undefined ? this.usrRolId : <any>null;
        data["usrEmpId"] = this.usrEmpId !== undefined ? this.usrEmpId : <any>null;
        data["usrNombre"] = this.usrNombre !== undefined ? this.usrNombre : <any>null;
        data["usrApellidoPaterno"] = this.usrApellidoPaterno !== undefined ? this.usrApellidoPaterno : <any>null;
        data["usrApellidoMaterno"] = this.usrApellidoMaterno !== undefined ? this.usrApellidoMaterno : <any>null;
        data["usrTelefono"] = this.usrTelefono !== undefined ? this.usrTelefono : <any>null;
        data["usrCelular"] = this.usrCelular !== undefined ? this.usrCelular : <any>null;
        data["usrEmail"] = this.usrEmail !== undefined ? this.usrEmail : <any>null;
        data["usrFechaIngreso"] = this.usrFechaIngreso ? formatDate(this.usrFechaIngreso) : <any>null;
        data["usrUsuario"] = this.usrUsuario !== undefined ? this.usrUsuario : <any>null;
        data["usrContrasena"] = this.usrContrasena !== undefined ? this.usrContrasena : <any>null;
        data["usrFechaBaja"] = this.usrFechaBaja ? this.usrFechaBaja.toISOString() : <any>null;
        data["usrActivo"] = this.usrActivo !== undefined ? this.usrActivo : <any>null;
        data["razonSocial"] = this.razonSocial !== undefined ? this.razonSocial : <any>null;
        data["usrRol"] = this.usrRol ? this.usrRol.toJSON() : <any>null;
        return data;
    }
}

export interface IUsuarioDto {
    usrId?: number;
    usrUsrId?: number | null;
    usrRolId?: number | null;
    usrEmpId?: number | null;
    usrNombre?: string | null;
    usrApellidoPaterno?: string | null;
    usrApellidoMaterno?: string | null;
    usrTelefono?: string | null;
    usrCelular?: string | null;
    usrEmail?: string | null;
    usrFechaIngreso?: Date;
    usrUsuario?: string | null;
    usrContrasena?: string | null;
    usrFechaBaja?: Date | null;
    usrActivo?: boolean | null;
    razonSocial?: string | null;
    usrRol?: Role;
}

export class VersionDto implements IVersionDto {
    veaFecha?: Date;
    veaNoVersion?: number;
    veaUsrId?: number;
    veaActivo?: boolean;

    constructor(data?: IVersionDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.veaFecha = _data["veaFecha"] ? new Date(_data["veaFecha"].toString()) : <any>null;
            this.veaNoVersion = _data["veaNoVersion"] !== undefined ? _data["veaNoVersion"] : <any>null;
            this.veaUsrId = _data["veaUsrId"] !== undefined ? _data["veaUsrId"] : <any>null;
            this.veaActivo = _data["veaActivo"] !== undefined ? _data["veaActivo"] : <any>null;
        }
    }

    static fromJS(data: any): VersionDto {
        data = typeof data === 'object' ? data : {};
        let result = new VersionDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["veaFecha"] = this.veaFecha ? this.veaFecha.toISOString() : <any>null;
        data["veaNoVersion"] = this.veaNoVersion !== undefined ? this.veaNoVersion : <any>null;
        data["veaUsrId"] = this.veaUsrId !== undefined ? this.veaUsrId : <any>null;
        data["veaActivo"] = this.veaActivo !== undefined ? this.veaActivo : <any>null;
        return data;
    }
}

export interface IVersionDto {
    veaFecha?: Date;
    veaNoVersion?: number;
    veaUsrId?: number;
    veaActivo?: boolean;
}

export class VersionesA3 implements IVersionesA3 {
    veaId?: number;
    veaFecha?: Date;
    veaNoVersion?: number;
    veaUsrId?: number;
    veaActivo?: boolean;
    veaFechaActivacion?: Date | null;
    actividadesA3s?: ActividadesA3[] | null;
    emprendedoresEtapas?: EmprendedoresEtapa[] | null;

    constructor(data?: IVersionesA3) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.veaId = _data["veaId"] !== undefined ? _data["veaId"] : <any>null;
            this.veaFecha = _data["veaFecha"] ? new Date(_data["veaFecha"].toString()) : <any>null;
            this.veaNoVersion = _data["veaNoVersion"] !== undefined ? _data["veaNoVersion"] : <any>null;
            this.veaUsrId = _data["veaUsrId"] !== undefined ? _data["veaUsrId"] : <any>null;
            this.veaActivo = _data["veaActivo"] !== undefined ? _data["veaActivo"] : <any>null;
            this.veaFechaActivacion = _data["veaFechaActivacion"] ? new Date(_data["veaFechaActivacion"].toString()) : <any>null;
            if (Array.isArray(_data["actividadesA3s"])) {
                this.actividadesA3s = [] as any;
                for (let item of _data["actividadesA3s"])
                    this.actividadesA3s!.push(ActividadesA3.fromJS(item));
            }
            else {
                this.actividadesA3s = <any>null;
            }
            if (Array.isArray(_data["emprendedoresEtapas"])) {
                this.emprendedoresEtapas = [] as any;
                for (let item of _data["emprendedoresEtapas"])
                    this.emprendedoresEtapas!.push(EmprendedoresEtapa.fromJS(item));
            }
            else {
                this.emprendedoresEtapas = <any>null;
            }
        }
    }

    static fromJS(data: any): VersionesA3 {
        data = typeof data === 'object' ? data : {};
        let result = new VersionesA3();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["veaId"] = this.veaId !== undefined ? this.veaId : <any>null;
        data["veaFecha"] = this.veaFecha ? this.veaFecha.toISOString() : <any>null;
        data["veaNoVersion"] = this.veaNoVersion !== undefined ? this.veaNoVersion : <any>null;
        data["veaUsrId"] = this.veaUsrId !== undefined ? this.veaUsrId : <any>null;
        data["veaActivo"] = this.veaActivo !== undefined ? this.veaActivo : <any>null;
        data["veaFechaActivacion"] = this.veaFechaActivacion ? this.veaFechaActivacion.toISOString() : <any>null;
        if (Array.isArray(this.actividadesA3s)) {
            data["actividadesA3s"] = [];
            for (let item of this.actividadesA3s)
                data["actividadesA3s"].push(item.toJSON());
        }
        if (Array.isArray(this.emprendedoresEtapas)) {
            data["emprendedoresEtapas"] = [];
            for (let item of this.emprendedoresEtapas)
                data["emprendedoresEtapas"].push(item.toJSON());
        }
        return data;
    }
}

export interface IVersionesA3 {
    veaId?: number;
    veaFecha?: Date;
    veaNoVersion?: number;
    veaUsrId?: number;
    veaActivo?: boolean;
    veaFechaActivacion?: Date | null;
    actividadesA3s?: ActividadesA3[] | null;
    emprendedoresEtapas?: EmprendedoresEtapa[] | null;
}

export class TableMatDialogData implements ITableMatDialogData {
    emprendedor_ID?: number;
    empRazonSocial?: string | null;
    etaDescripcion?: string | null;
    conPromedio?: number | null;
    sesFechas?: string[] | null;
    porcentajeCompletado?: number;
    nivel_Descripcion?: string | null;

    constructor(data?: ITableMatDialogData) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.emprendedor_ID = _data["emprendedor_ID"] !== undefined ? _data["emprendedor_ID"] : <any>null;
            this.empRazonSocial = _data["empRazonSocial"] !== undefined ? _data["empRazonSocial"] : <any>null;
            this.etaDescripcion = _data["etaDescripcion"] !== undefined ? _data["etaDescripcion"] : <any>null;
            this.conPromedio = _data["conPromedio"] !== undefined ? _data["conPromedio"] : <any>null;
            if (Array.isArray(_data["sesFechas"])) {
                this.sesFechas = [] as any;
                for (let item of _data["sesFechas"])
                    this.sesFechas!.push(item);
            }
            else {
                this.sesFechas = <any>null;
            }
            this.porcentajeCompletado = _data["porcentajeCompletado"] !== undefined ? _data["porcentajeCompletado"] : <any>null;
            this.nivel_Descripcion = _data["nivel_Descripcion"] !== undefined ? _data["nivel_Descripcion"] : <any>null;
        }
    }

    static fromJS(data: any): TableMatDialogData {
        data = typeof data === 'object' ? data : {};
        let result = new TableMatDialogData();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["emprendedor_ID"] = this.emprendedor_ID !== undefined ? this.emprendedor_ID : <any>null;
        data["empRazonSocial"] = this.empRazonSocial !== undefined ? this.empRazonSocial : <any>null;
        data["etaDescripcion"] = this.etaDescripcion !== undefined ? this.etaDescripcion : <any>null;
        data["conPromedio"] = this.conPromedio !== undefined ? this.conPromedio : <any>null;
        if (Array.isArray(this.sesFechas)) {
            data["sesFechas"] = [];
            for (let item of this.sesFechas)
                data["sesFechas"].push(item);
        }
        data["porcentajeCompletado"] = this.porcentajeCompletado !== undefined ? this.porcentajeCompletado : <any>null;
        data["nivel_Descripcion"] = this.nivel_Descripcion !== undefined ? this.nivel_Descripcion : <any>null;
        return data;
    }
}

export interface ITableMatDialogData {
    emprendedor_ID?: number;
    empRazonSocial?: string | null;
    etaDescripcion?: string | null;
    conPromedio?: number | null;
    sesFechas?: string[] | null;
    porcentajeCompletado?: number;
    nivel_Descripcion?: string | null;
}

function formatDate(d: Date) {
    return d.getFullYear() + '-' + 
        (d.getMonth() < 9 ? ('0' + (d.getMonth()+1)) : (d.getMonth()+1)) + '-' +
        (d.getDate() < 10 ? ('0' + d.getDate()) : d.getDate());
}

export interface FileParameter {
    data: any;
    fileName: string;
}